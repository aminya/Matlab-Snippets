# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
'.source.matlab, source.m':

    "aviinfo":
        prefix: "aviinfo"
        body: '''${1:fileinfo} = aviinfo(${1:filename})'''
        description: '''fileinfo = aviinfo(filename)'''


    "VideoReader.read":
        prefix: "VideoReader.read"
        body: '''${1:video} = VideoReader.read(${1:v}, ${2:optional_range}, ${3:optional_'native'})'''
        description: '''video = VideoReader.read(v, optional_range, optional_'native')'''


    "audiorecorder.record":
        prefix: "audiorecorder.record"
        body: '''audiorecorder.record(${1:recorderObj}, ${2:optional_length})'''
        description: '''audiorecorder.record(recorderObj, optional_length)'''


    "lin2mu":
        prefix: "lin2mu"
        body: '''${1:mu} = lin2mu(${1:y})'''
        description: '''mu = lin2mu(y)'''


    "audiorecorder.isrecording":
        prefix: "audiorecorder.isrecording"
        body: '''${1:status} = audiorecorder.isrecording(${1:recorderObj})'''
        description: '''status = audiorecorder.isrecording(recorderObj)'''


    "audioplayer.playblocking":
        prefix: "audioplayer.playblocking"
        body: '''audioplayer.playblocking(${1:playerObj}, ${2:optional_range})'''
        description: '''audioplayer.playblocking(playerObj, optional_range)'''


    "audiorecorder":
        prefix: "audiorecorder"
        body: '''${1:recorder} = audiorecorder(${1:Fs}, ${2:nBits}, ${3:nChannels}, ${4:ID})'''
        description: '''recorder = audiorecorder(Fs, nBits, nChannels, ID)'''


    "VideoWriter":
        prefix: "VideoWriter"
        body: '''${1:obj} = VideoWriter(${1:filename}, ${2:optional_profile})'''
        description: '''obj = VideoWriter(filename, optional_profile)'''


    "audiowrite":
        prefix: "audiowrite"
        body: '''audiowrite(${1:filename}, ${2:y}, ${3:Fs}, 'Title', ${4:value}, 'Artist', ${5:value}, 'Comment', ${6:value}, 'BitRate', ${7:value})'''
        description: '''audiowrite(filename, y, Fs, 'Title', value, 'Artist', value, 'Comment', value, 'BitRate', value)'''


    "audiorecorder.recordblocking":
        prefix: "audiorecorder.recordblocking"
        body: '''audiorecorder.recordblocking(${1:recorderObj}, ${2:length})'''
        description: '''audiorecorder.recordblocking(recorderObj, length)'''


    "mu2lin":
        prefix: "mu2lin"
        body: '''${1:y} = mu2lin(${1:mu})'''
        description: '''y = mu2lin(mu)'''


    "sound":
        prefix: "sound"
        body: '''sound(${1:y}, ${2:Fs}, ${3:nBits})'''
        description: '''sound(y, Fs, nBits)'''


    "audioplayer.stop":
        prefix: "audioplayer.stop"
        body: '''audioplayer.stop(${1:playerObj})'''
        description: '''audioplayer.stop(playerObj)'''


    "audiorecorder.getaudiodata":
        prefix: "audiorecorder.getaudiodata"
        body: '''${1:y} = audiorecorder.getaudiodata(${1:recorderObj}, ${2:optional_datatype})'''
        description: '''y = audiorecorder.getaudiodata(recorderObj, optional_datatype)'''


    "VideoWriter.open":
        prefix: "VideoWriter.open"
        body: '''VideoWriter.open(${1:v})'''
        description: '''VideoWriter.open(v)'''


    "soundsc":
        prefix: "soundsc"
        body: '''soundsc(${1:y}, ${2:Fs}, ${3:nBits}, ${4:optional_yRange})'''
        description: '''soundsc(y, Fs, nBits, optional_yRange)'''


    "audioplayer":
        prefix: "audioplayer"
        body: '''${1:player} = audioplayer(${1:recorder}, ${2:ID})'''
        description: '''player = audioplayer(recorder, ID)'''


    "VideoWriter.writeVideo":
        prefix: "VideoWriter.writeVideo"
        body: '''VideoWriter.writeVideo(${1:v}, ${2:frame})'''
        description: '''VideoWriter.writeVideo(v, frame)'''


    "mmfileinfo":
        prefix: "mmfileinfo"
        body: '''${1:fileinfo} = mmfileinfo(${1:filename})'''
        description: '''fileinfo = mmfileinfo(filename)'''


    "audioplayer.resume":
        prefix: "audioplayer.resume"
        body: '''audioplayer.resume(${1:playerObj})'''
        description: '''audioplayer.resume(playerObj)'''


    "audiorecorder.play":
        prefix: "audiorecorder.play"
        body: '''${1:player} = audiorecorder.play(${1:recObj}, ${2:optional_range})'''
        description: '''player = audiorecorder.play(recObj, optional_range)'''


    "audioinfo":
        prefix: "audioinfo"
        body: '''${1:info} = audioinfo(${1:filename})'''
        description: '''info = audioinfo(filename)'''


    "audioplayer.play":
        prefix: "audioplayer.play"
        body: '''audioplayer.play(${1:playerObj}, ${2:optional_range})'''
        description: '''audioplayer.play(playerObj, optional_range)'''


    "VideoReader.readFrame":
        prefix: "VideoReader.readFrame"
        body: '''${1:video} = VideoReader.readFrame(${1:v}, ${2:optional_'native'})'''
        description: '''video = VideoReader.readFrame(v, optional_'native')'''


    "audiorecorder.stop":
        prefix: "audiorecorder.stop"
        body: '''audiorecorder.stop(${1:recorderObj})'''
        description: '''audiorecorder.stop(recorderObj)'''


    "audioread":
        prefix: "audioread"
        body: '''[${1:y}, ${2:Fs}] = audioread(${1:filename}, ${2:optional_range}, ${3:optional_datatype})'''
        description: '''[y, Fs] = audioread(filename, optional_range, optional_datatype)'''


    "VideoReader":
        prefix: "VideoReader"
        body: '''${1:obj} = VideoReader(${1:filename}, 'Tag', ${2:value}, 'UserData', ${3:value}, 'CurrentTime', ${4:value})'''
        description: '''obj = VideoReader(filename, 'Tag', value, 'UserData', value, 'CurrentTime', value)'''


    "VideoReader.hasFrame":
        prefix: "VideoReader.hasFrame"
        body: '''${1:video} = VideoReader.hasFrame(${1:v})'''
        description: '''video = VideoReader.hasFrame(v)'''


    "audiorecorder.getplayer":
        prefix: "audiorecorder.getplayer"
        body: '''${1:playerObj} = audiorecorder.getplayer(${1:recorderObj})'''
        description: '''playerObj = audiorecorder.getplayer(recorderObj)'''


    "audiodevinfo":
        prefix: "audiodevinfo"
        body: '''${1:ID} = audiodevinfo(${1:IO}, ${2:name}, ${3:Fs}, ${4:nChannels})'''
        description: '''ID = audiodevinfo(IO, name, Fs, nChannels)'''


    "audiorecorder.pause":
        prefix: "audiorecorder.pause"
        body: '''audiorecorder.pause(${1:recorderObj})'''
        description: '''audiorecorder.pause(recorderObj)'''


    "audioplayer.isplaying":
        prefix: "audioplayer.isplaying"
        body: '''${1:status} = audioplayer.isplaying(${1:playerObj})'''
        description: '''status = audioplayer.isplaying(playerObj)'''


    "VideoWriter.close":
        prefix: "VideoWriter.close"
        body: '''VideoWriter.close(${1:v})'''
        description: '''VideoWriter.close(v)'''


    "audioplayer.pause":
        prefix: "audioplayer.pause"
        body: '''audioplayer.pause(${1:playerObj})'''
        description: '''audioplayer.pause(playerObj)'''


    "audiorecorder.resume":
        prefix: "audiorecorder.resume"
        body: '''audiorecorder.resume(${1:recorderObj})'''
        description: '''audiorecorder.resume(recorderObj)'''

