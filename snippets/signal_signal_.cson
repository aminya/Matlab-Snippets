# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
'.source.matlab, source.m':

    "settlingtime":
        prefix: "settlingtime"
        body: '''[${1:S}, ${2:SLEV}, ${3:SINST}] = settlingtime(${1:X}, ${2:T}, ${3:D}, 'MidPercentReferenceLevel', ${4:value}, 'StateLevels', ${5:value}, 'Tolerance', ${6:value})'''
        description: '''[S, SLEV, SINST] = settlingtime(X, T, D, 'MidPercentReferenceLevel', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/settlingtime.html'


    "rssq":
        prefix: "rssq"
        body: '''${1:Y} = rssq(${1:X}, ${2:optional_DIM})'''
        description: '''Y = rssq(X, optional_DIM)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rssq.html'


    "bilinear":
        prefix: "bilinear"
        body: '''[${1:Ad}, ${2:Bd}, ${3:Cd}, ${4:Dd}] = bilinear(${1:A}, ${2:B}, ${3:C}, ${4:D}, ${5:fs}, ${6:optional_fp})'''
        description: '''[Ad, Bd, Cd, Dd] = bilinear(A, B, C, D, fs, optional_fp)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/bilinear.html'


    "residuez":
        prefix: "residuez"
        body: '''[${1:b}, ${2:a}] = residuez(${1:r}, ${2:p}, ${3:k})'''
        description: '''[b, a] = residuez(r, p, k)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/residuez.html'


    "sgolay":
        prefix: "sgolay"
        body: '''[${1:b}, ${2:g}] = sgolay(${1:order}, ${2:framelen}, ${3:optional_weights})'''
        description: '''[b, g] = sgolay(order, framelen, optional_weights)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sgolay.html'


    "modalfrf":
        prefix: "modalfrf"
        body: '''[${1:frf}, ${2:f}] = modalfrf(${1:sys}, ${2:f}, 'Sensor', ${3:value})'''
        description: '''[frf, f] = modalfrf(sys, f, 'Sensor', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/modalfrf.html'


    "db2mag":
        prefix: "db2mag"
        body: '''${1:y} = db2mag(${1:ydb})'''
        description: '''y = db2mag(ydb)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/db2mag.html'


    "meanfreq":
        prefix: "meanfreq"
        body: '''[${1:freq}, ${2:power}] = meanfreq(${1:sxx}, ${2:f}, ${3:rbw}, ${4:optional_freqrange})'''
        description: '''[freq, power] = meanfreq(sxx, f, rbw, optional_freqrange)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/meanfreq.html'


    "rcosdesign":
        prefix: "rcosdesign"
        body: '''${1:b} = rcosdesign(${1:beta}, ${2:span}, ${3:sps}, ${4:optional_shape})'''
        description: '''b = rcosdesign(beta, span, sps, optional_shape)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rcosdesign.html'


    "bandstop":
        prefix: "bandstop"
        body: '''[${1:y}, ${2:d}] = bandstop(${1:xt}, ${2:fpass}, 'ImpulseResponse', ${3:value}, 'Steepness', ${4:value}, 'StopbandAttenuation', ${5:value})'''
        description: '''[y, d] = bandstop(xt, fpass, 'ImpulseResponse', value, 'Steepness', value, 'StopbandAttenuation', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/bandstop.html'


    "cheby2":
        prefix: "cheby2"
        body: '''[${1:A}, ${2:B}, ${3:C}, ${4:D}] = cheby2(${1:n}, ${2:Rs}, ${3:Ws}, ${4:ftype}, ${5:optional_'s'})'''
        description: '''[A, B, C, D] = cheby2(n, Rs, Ws, ftype, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cheby2.html'


    "yulewalk":
        prefix: "yulewalk"
        body: '''[${1:b}, ${2:a}] = yulewalk(${1:n}, ${2:f}, ${3:m})'''
        description: '''[b, a] = yulewalk(n, f, m)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/yulewalk.html'


    "gmonopuls":
        prefix: "gmonopuls"
        body: '''${1:tc} = gmonopuls(${1:'cutoff'}, ${2:fc})'''
        description: '''tc = gmonopuls('cutoff', fc)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/gmonopuls.html'


    "nuttallwin":
        prefix: "nuttallwin"
        body: '''${1:w} = nuttallwin(${1:N}, ${2:optional_SFLAG})'''
        description: '''w = nuttallwin(N, optional_SFLAG)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/nuttallwin.html'


    "hamming":
        prefix: "hamming"
        body: '''${1:w} = hamming(${1:L}, ${2:optional_sflag})'''
        description: '''w = hamming(L, optional_sflag)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/hamming.html'


    "cceps":
        prefix: "cceps"
        body: '''[${1:xhat}, ${2:nd}, ${3:xhat1}] = cceps(${1:x}, ${2:optional_n})'''
        description: '''[xhat, nd, xhat1] = cceps(x, optional_n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cceps.html'


    "dtw":
        prefix: "dtw"
        body: '''[${1:dist}, ${2:ix}, ${3:iy}] = dtw(${1:x}, ${2:y}, ${3:optional_maxsamp}, ${4:optional_metric})'''
        description: '''[dist, ix, iy] = dtw(x, y, optional_maxsamp, optional_metric)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dtw.html'


    "cpsd":
        prefix: "cpsd"
        body: '''[${1:pxy}, ${2:f}] = cpsd(${1:x}, ${2:y}, ${3:window}, ${4:noverlap}, ${5:f}, ${6:fs}, ${7:optional_'mimo'}, ${8:optional_freqrange})'''
        description: '''[pxy, f] = cpsd(x, y, window, noverlap, f, fs, optional_'mimo', optional_freqrange)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cpsd.html'


    "rainflow":
        prefix: "rainflow"
        body: '''[${1:c}, ${2:rm}, ${3:rmr}, ${4:rmm}, ${5:idx}] = rainflow(${1:xt}, ${2:optional_'ext'})'''
        description: '''[c, rm, rmr, rmm, idx] = rainflow(xt, optional_'ext')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rainflow.html'


    "rc2lar":
        prefix: "rc2lar"
        body: '''${1:g} = rc2lar(${1:k})'''
        description: '''g = rc2lar(k)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rc2lar.html'


    "ifsst":
        prefix: "ifsst"
        body: '''${1:x} = ifsst(${1:s}, ${2:window}, ${3:iridge}, ${4:'NumFrequencyBins'}, ${5:nbins})'''
        description: '''x = ifsst(s, window, iridge, 'NumFrequencyBins', nbins)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ifsst.html'


    "enbw":
        prefix: "enbw"
        body: '''${1:bw} = enbw(${1:window}, ${2:optional_fs})'''
        description: '''bw = enbw(window, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/enbw.html'


    "eqtflength":
        prefix: "eqtflength"
        body: '''[${1:b}, ${2:a}, ${3:n}, ${4:m}] = eqtflength(${1:num}, ${2:den})'''
        description: '''[b, a, n, m] = eqtflength(num, den)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/eqtflength.html'


    "statelevels":
        prefix: "statelevels"
        body: '''[${1:LEVELS}, ${2:HISTOGRAM}, ${3:BINLEVELS}] = statelevels(${1:X}, ${2:NBINS}, ${3:optional_METHOD})'''
        description: '''[LEVELS, HISTOGRAM, BINLEVELS] = statelevels(X, NBINS, optional_METHOD)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/statelevels.html'


    "peak2rms":
        prefix: "peak2rms"
        body: '''${1:Y} = peak2rms(${1:X}, ${2:optional_DIM})'''
        description: '''Y = peak2rms(X, optional_DIM)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/peak2rms.html'


    "filternorm":
        prefix: "filternorm"
        body: '''${1:L} = filternorm(${1:b}, ${2:a}, ${3:2}, ${4:optional_tol})'''
        description: '''L = filternorm(b, a, 2, optional_tol)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/filternorm.html'


    "lar2rc":
        prefix: "lar2rc"
        body: '''${1:k} = lar2rc(${1:g})'''
        description: '''k = lar2rc(g)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lar2rc.html'


    "udecode":
        prefix: "udecode"
        body: '''${1:y} = udecode(${1:u}, ${2:n}, ${3:v}, ${4:optional_'SaturateMode'})'''
        description: '''y = udecode(u, n, v, optional_'SaturateMode')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/udecode.html'


    "convmtx":
        prefix: "convmtx"
        body: '''${1:A} = convmtx(${1:h}, ${2:n})'''
        description: '''A = convmtx(h, n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/convmtx.html'


    "orderspectrum":
        prefix: "orderspectrum"
        body: '''[${1:spec}, ${2:order}] = orderspectrum(${1:map}, ${2:order})'''
        description: '''[spec, order] = orderspectrum(map, order)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/orderspectrum.html'


    "ss2sos":
        prefix: "ss2sos"
        body: '''[${1:sos}, ${2:g}] = ss2sos(${1:A}, ${2:B}, ${3:C}, ${4:D}, ${5:iu}, ${6:'order'}, ${7:optional_'scale'})'''
        description: '''[sos, g] = ss2sos(A, B, C, D, iu, 'order', optional_'scale')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ss2sos.html'


    "dct":
        prefix: "dct"
        body: '''${1:y} = dct(${1:x}, ${2:n}, ${3:dim}, ${4:optional_'Type'}, ${5:optional_dcttype})'''
        description: '''y = dct(x, n, dim, optional_'Type', optional_dcttype)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dct.html'


    "filtord":
        prefix: "filtord"
        body: '''${1:n} = filtord(${1:d})'''
        description: '''n = filtord(d)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/filtord.html'


    "zp2sos":
        prefix: "zp2sos"
        body: '''[${1:sos}, ${2:g}] = zp2sos(${1:z}, ${2:p}, ${3:k}, ${4:'order'}, ${5:'scale'}, ${6:optional_zeroflag})'''
        description: '''[sos, g] = zp2sos(z, p, k, 'order', 'scale', optional_zeroflag)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/zp2sos.html'


    "poly2rc":
        prefix: "poly2rc"
        body: '''[${1:k}, ${2:r0}] = poly2rc(${1:a}, ${2:optional_efinal})'''
        description: '''[k, r0] = poly2rc(a, optional_efinal)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/poly2rc.html'


    "lowpass":
        prefix: "lowpass"
        body: '''[${1:y}, ${2:d}] = lowpass(${1:xt}, ${2:fpass}, 'ImpulseResponse', ${3:value}, 'Steepness', ${4:value}, 'StopbandAttenuation', ${5:value})'''
        description: '''[y, d] = lowpass(xt, fpass, 'ImpulseResponse', value, 'Steepness', value, 'StopbandAttenuation', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lowpass.html'


    "poctave":
        prefix: "poctave"
        body: '''[${1:p}, ${2:cf}] = poctave(${1:pxx}, ${2:fs}, ${3:f}, ${4:'psd'}, 'BandsPerOctave', ${5:value}, 'FilterOrder', ${6:value}, 'FrequencyLimits', ${7:value}, 'Weighting', ${8:value})'''
        description: '''[p, cf] = poctave(pxx, fs, f, 'psd', 'BandsPerOctave', value, 'FilterOrder', value, 'FrequencyLimits', value, 'Weighting', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/poctave.html'


    "fir2":
        prefix: "fir2"
        body: '''${1:b} = fir2(${1:n}, ${2:f}, ${3:m}, ${4:npt}, ${5:lap}, ${6:optional_window})'''
        description: '''b = fir2(n, f, m, npt, lap, optional_window)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fir2.html'


    "parzenwin":
        prefix: "parzenwin"
        body: '''${1:w} = parzenwin(${1:L})'''
        description: '''w = parzenwin(L)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/parzenwin.html'


    "rectpuls":
        prefix: "rectpuls"
        body: '''${1:y} = rectpuls(${1:t}, ${2:optional_w})'''
        description: '''y = rectpuls(t, optional_w)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rectpuls.html'


    "rc2is":
        prefix: "rc2is"
        body: '''${1:isin} = rc2is(${1:k})'''
        description: '''isin = rc2is(k)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rc2is.html'


    "tachorpm":
        prefix: "tachorpm"
        body: '''[${1:rpm}, ${2:t}, ${3:tp}] = tachorpm(${1:x}, ${2:fs}, 'PulsesPerRev', ${3:value}, 'StateLevels', ${4:value}, 'OutputFs', ${5:value}, 'FitType', ${6:value}, 'FitPoints', ${7:value})'''
        description: '''[rpm, t, tp] = tachorpm(x, fs, 'PulsesPerRev', value, 'StateLevels', value, 'OutputFs', value, 'FitType', value, 'FitPoints', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tachorpm.html'


    "single":
        prefix: "single"
        body: '''${1:f2} = single(${1:f1})'''
        description: '''f2 = single(f1)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/single.html'


    "pmtm":
        prefix: "pmtm"
        body: '''[${1:pxx}, ${2:w}, ${3:pxxc}] = pmtm(${1:x}, ${2:dpss_params}, ${3:optional_method}, ${4:'DropLastTaper'}, ${5:optional_dropflag}, ${6:optional_freqrange}, ${7:'ConfidenceLevel'}, ${8:optional_probability})'''
        description: '''[pxx, w, pxxc] = pmtm(x, dpss_params, optional_method, 'DropLastTaper', optional_dropflag, optional_freqrange, 'ConfidenceLevel', optional_probability)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pmtm.html'


    "tsa":
        prefix: "tsa"
        body: '''[${1:ta}, ${2:t}, ${3:p}, ${4:rpm}] = tsa(${1:xt}, ${2:tp}, 'Method', ${3:value}, 'NumRotations', ${4:value}, 'PulsesPerRotation', ${5:value}, 'ResampleFactor', ${6:value})'''
        description: '''[ta, t, p, rpm] = tsa(xt, tp, 'Method', value, 'NumRotations', value, 'PulsesPerRotation', value, 'ResampleFactor', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tsa.html'


    "risetime":
        prefix: "risetime"
        body: '''[${1:R}, ${2:LT}, ${3:UT}, ${4:LL}, ${5:UL}] = risetime(${1:X}, ${2:optional_T}, 'PercentReferenceLevels', ${3:value}, 'StateLevels', ${4:value}, 'Tolerance', ${5:value})'''
        description: '''[R, LT, UT, LL, UL] = risetime(X, optional_T, 'PercentReferenceLevels', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/risetime.html'


    "ac2rc":
        prefix: "ac2rc"
        body: '''[${1:k}, ${2:r0}] = ac2rc(${1:r})'''
        description: '''[k, r0] = ac2rc(r)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ac2rc.html'


    "bandpower":
        prefix: "bandpower"
        body: '''${1:p} = bandpower(${1:pxx}, ${2:f}, ${3:optional_freqrange}, ${4:'psd'})'''
        description: '''p = bandpower(pxx, f, optional_freqrange, 'psd')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/bandpower.html'


    "shiftdata":
        prefix: "shiftdata"
        body: '''[${1:x}, ${2:perm}, ${3:nshifts}] = shiftdata(${1:x}, ${2:dim})'''
        description: '''[x, perm, nshifts] = shiftdata(x, dim)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/shiftdata.html'


    "sos2ss":
        prefix: "sos2ss"
        body: '''[${1:A}, ${2:B}, ${3:C}, ${4:D}] = sos2ss(${1:sos}, ${2:optional_g})'''
        description: '''[A, B, C, D] = sos2ss(sos, optional_g)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sos2ss.html'


    "isstable":
        prefix: "isstable"
        body: '''${1:flag} = isstable(${1:d})'''
        description: '''flag = isstable(d)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/isstable.html'


    "prony":
        prefix: "prony"
        body: '''[${1:Num}, ${2:Den}] = prony(${1:impulse_resp}, ${2:num_ord}, ${3:denom_ord})'''
        description: '''[Num, Den] = prony(impulse_resp, num_ord, denom_ord)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/prony.html'


    "strips":
        prefix: "strips"
        body: '''strips(${1:x}, ${2:sd}, ${3:fs}, ${4:scale})'''
        description: '''strips(x, sd, fs, scale)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/strips.html'


    "gaussdesign":
        prefix: "gaussdesign"
        body: '''${1:h} = gaussdesign(${1:bt}, ${2:span}, ${3:sps})'''
        description: '''h = gaussdesign(bt, span, sps)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/gaussdesign.html'


    "thd":
        prefix: "thd"
        body: '''[${1:r}, ${2:harmpow}, ${3:harmfreq}] = thd(${1:sxx}, ${2:f}, ${3:rbw}, ${4:optional_n}, ${5:'power'}, ${6:optional_'aliased'})'''
        description: '''[r, harmpow, harmfreq] = thd(sxx, f, rbw, optional_n, 'power', optional_'aliased')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/thd.html'


    "phasedelay":
        prefix: "phasedelay"
        body: '''${1:phi} = phasedelay(${1:d}, ${2:optional_f}, ${3:optional_fs})'''
        description: '''phi = phasedelay(d, optional_f, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/phasedelay.html'


    "poly2lsf":
        prefix: "poly2lsf"
        body: '''${1:lsf} = poly2lsf(${1:a})'''
        description: '''lsf = poly2lsf(a)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/poly2lsf.html'


    "aryule":
        prefix: "aryule"
        body: '''[${1:a}, ${2:e}, ${3:rc}] = aryule(${1:x}, ${2:p})'''
        description: '''[a, e, rc] = aryule(x, p)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/aryule.html'


    "icceps":
        prefix: "icceps"
        body: '''${1:x} = icceps(${1:xhat}, ${2:optional_nd})'''
        description: '''x = icceps(xhat, optional_nd)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/icceps.html'


    "marcumq":
        prefix: "marcumq"
        body: '''${1:Q} = marcumq(${1:a}, ${2:b}, ${3:optional_m})'''
        description: '''Q = marcumq(a, b, optional_m)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/marcumq.html'


    "polystab":
        prefix: "polystab"
        body: '''${1:b} = polystab(${1:a})'''
        description: '''b = polystab(a)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/polystab.html'


    "medfreq":
        prefix: "medfreq"
        body: '''[${1:freq}, ${2:power}] = medfreq(${1:sxx}, ${2:f}, ${3:rbw}, ${4:optional_freqrange})'''
        description: '''[freq, power] = medfreq(sxx, f, rbw, optional_freqrange)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/medfreq.html'


    "stepz":
        prefix: "stepz"
        body: '''[${1:h}, ${2:t}] = stepz(${1:d}, ${2:n}, ${3:optional_fs})'''
        description: '''[h, t] = stepz(d, n, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/stepz.html'


    "pburg":
        prefix: "pburg"
        body: '''[${1:pxx}, ${2:f}, ${3:pxxc}] = pburg(${1:x}, ${2:order}, ${3:f}, ${4:fs}, ${5:optional_freqrange}, ${6:'ConfidenceLevel'}, ${7:optional_probability})'''
        description: '''[pxx, f, pxxc] = pburg(x, order, f, fs, optional_freqrange, 'ConfidenceLevel', optional_probability)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pburg.html'


    "fircls1":
        prefix: "fircls1"
        body: '''${1:b} = fircls1(${1:n}, ${2:wo}, ${3:dp}, ${4:ds}, ${5:wp}, ${6:ws}, ${7:k}, ${8:optional_'high'}, ${9:optional_'design_flag'})'''
        description: '''b = fircls1(n, wo, dp, ds, wp, ws, k, optional_'high', optional_'design_flag')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fircls1.html'


    "mscohere":
        prefix: "mscohere"
        body: '''[${1:cxy}, ${2:f}] = mscohere(${1:x}, ${2:y}, ${3:window}, ${4:noverlap}, ${5:f}, ${6:fs}, ${7:optional_'mimo'}, ${8:optional_freqrange})'''
        description: '''[cxy, f] = mscohere(x, y, window, noverlap, f, fs, optional_'mimo', optional_freqrange)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/mscohere.html'


    "sawtooth":
        prefix: "sawtooth"
        body: '''${1:x} = sawtooth(${1:t}, ${2:optional_xmax})'''
        description: '''x = sawtooth(t, optional_xmax)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sawtooth.html'


    "hampel":
        prefix: "hampel"
        body: '''[${1:y}, ${2:j}, ${3:xmedian}, ${4:xsigma}] = hampel(${1:x}, ${2:k}, ${3:optional_nsigma})'''
        description: '''[y, j, xmedian, xsigma] = hampel(x, k, optional_nsigma)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/hampel.html'


    "db2pow":
        prefix: "db2pow"
        body: '''${1:y} = db2pow(${1:ydb})'''
        description: '''y = db2pow(ydb)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/db2pow.html'


    "alignsignals":
        prefix: "alignsignals"
        body: '''[${1:Xa}, ${2:Ya}, ${3:D}] = alignsignals(${1:X}, ${2:Y}, ${3:maxlag}, ${4:optional_'truncate'})'''
        description: '''[Xa, Ya, D] = alignsignals(X, Y, maxlag, optional_'truncate')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/alignsignals.html'


    "fftfilt":
        prefix: "fftfilt"
        body: '''${1:y} = fftfilt(${1:gpuArrayb}, ${2:gpuArrayX}, ${3:optional_n})'''
        description: '''y = fftfilt(gpuArrayb, gpuArrayX, optional_n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fftfilt.html'


    "findchangepts":
        prefix: "findchangepts"
        body: '''[${1:ipt}, ${2:residual}] = findchangepts(${1:x}, 'MaxNumChanges', ${2:value}, 'Statistic', ${3:value}, 'MinDistance', ${4:value}, 'MinThreshold', ${5:value})'''
        description: '''[ipt, residual] = findchangepts(x, 'MaxNumChanges', value, 'Statistic', value, 'MinDistance', value, 'MinThreshold', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/findchangepts.html'


    "besselap":
        prefix: "besselap"
        body: '''[${1:z}, ${2:p}, ${3:k}] = besselap(${1:n})'''
        description: '''[z, p, k] = besselap(n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/besselap.html'


    "overshoot":
        prefix: "overshoot"
        body: '''[${1:OS}, ${2:OSLEV}, ${3:OSINST}] = overshoot(${1:X}, ${2:optional_T}, 'PercentReferenceLevels', ${3:value}, 'Region', ${4:value}, 'SeekFactor', ${5:value}, 'StateLevels', ${6:value}, 'Tolerance', ${7:value})'''
        description: '''[OS, OSLEV, OSINST] = overshoot(X, optional_T, 'PercentReferenceLevels', value, 'Region', value, 'SeekFactor', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/overshoot.html'


    "square":
        prefix: "square"
        body: '''${1:x} = square(${1:t}, ${2:optional_duty})'''
        description: '''x = square(t, optional_duty)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/square.html'


    "pyulear":
        prefix: "pyulear"
        body: '''[${1:pxx}, ${2:f}, ${3:pxxc}] = pyulear(${1:x}, ${2:order}, ${3:f}, ${4:fs}, ${5:optional_freqrange}, ${6:'ConfidenceLevel'}, ${7:optional_probability})'''
        description: '''[pxx, f, pxxc] = pyulear(x, order, f, fs, optional_freqrange, 'ConfidenceLevel', optional_probability)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pyulear.html'


    "triang":
        prefix: "triang"
        body: '''${1:w} = triang(${1:L})'''
        description: '''w = triang(L)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/triang.html'


    "hann":
        prefix: "hann"
        body: '''${1:w} = hann(${1:L}, ${2:optional_sflag})'''
        description: '''w = hann(L, optional_sflag)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/hann.html'


    "kurtogram":
        prefix: "kurtogram"
        body: '''[${1:kgram}, ${2:f}, ${3:w}, ${4:fc}, ${5:wc}, ${6:bw}] = kurtogram(${1:xt}, ${2:optional_level})'''
        description: '''[kgram, f, w, fc, wc, bw] = kurtogram(xt, optional_level)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/kurtogram.html'


    "falltime":
        prefix: "falltime"
        body: '''[${1:F}, ${2:LT}, ${3:UT}, ${4:LL}, ${5:UL}] = falltime(${1:X}, ${2:optional_T}, 'PercentReferenceLevels', ${3:value}, 'StateLevels', ${4:value}, 'Tolerance', ${5:value})'''
        description: '''[F, LT, UT, LL, UL] = falltime(X, optional_T, 'PercentReferenceLevels', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/falltime.html'


    "findsignal":
        prefix: "findsignal"
        body: '''[${1:istart}, ${2:istop}, ${3:dist}] = findsignal(${1:data}, ${2:signal}, 'Normalization', ${3:value}, 'NormalizationLength', ${4:value}, 'MaxDistance', ${5:value}, 'MaxNumSegments', ${6:value}, 'TimeAlignment', ${7:value}, 'EDRTolerance', ${8:value}, 'Metric', ${9:value}, 'Annotate', ${10:value})'''
        description: '''[istart, istop, dist] = findsignal(data, signal, 'Normalization', value, 'NormalizationLength', value, 'MaxDistance', value, 'MaxNumSegments', value, 'TimeAlignment', value, 'EDRTolerance', value, 'Metric', value, 'Annotate', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/findsignal.html'


    "upfirdn":
        prefix: "upfirdn"
        body: '''${1:yout} = upfirdn(${1:xin}, ${2:h}, ${3:p}, ${4:optional_q})'''
        description: '''yout = upfirdn(xin, h, p, optional_q)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/upfirdn.html'


    "fillgaps":
        prefix: "fillgaps"
        body: '''${1:y} = fillgaps(${1:x}, ${2:maxlen}, ${3:optional_order})'''
        description: '''y = fillgaps(x, maxlen, optional_order)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fillgaps.html'


    "freqz":
        prefix: "freqz"
        body: '''${1:h} = freqz(${1:d}, ${2:f}, ${3:fs})'''
        description: '''h = freqz(d, f, fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/freqz.html'


    "fsst":
        prefix: "fsst"
        body: '''[${1:s}, ${2:f}, ${3:t}] = fsst(${1:x}, ${2:ts}, ${3:optional_window}, ${4:optional_freqloc})'''
        description: '''[s, f, t] = fsst(x, ts, optional_window, optional_freqloc)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fsst.html'


    "gausswin":
        prefix: "gausswin"
        body: '''${1:w} = gausswin(${1:N}, ${2:optional_Alpha})'''
        description: '''w = gausswin(N, optional_Alpha)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/gausswin.html'


    "fir1":
        prefix: "fir1"
        body: '''${1:b} = fir1(${1:n}, ${2:Wn}, ${3:optional_ftype}, ${4:optional_window}, ${5:optional_scaleopt})'''
        description: '''b = fir1(n, Wn, optional_ftype, optional_window, optional_scaleopt)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fir1.html'


    "pspectrum":
        prefix: "pspectrum"
        body: '''[${1:p}, ${2:f}, ${3:pwr}] = pspectrum(${1:x}, ${2:optional_t}, ${3:optional_type}, 'FrequencyLimits', ${4:value}, 'FrequencyResolution', ${5:value}, 'Leakage', ${6:value}, 'MinThreshold', ${7:value}, 'NumPowerBins', ${8:value}, 'OverlapPercent', ${9:value}, 'Reassign', ${10:value}, 'TimeResolution', ${11:value})'''
        description: '''[p, f, pwr] = pspectrum(x, optional_t, optional_type, 'FrequencyLimits', value, 'FrequencyResolution', value, 'Leakage', value, 'MinThreshold', value, 'NumPowerBins', value, 'OverlapPercent', value, 'Reassign', value, 'TimeResolution', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pspectrum.html'


    "butter":
        prefix: "butter"
        body: '''[${1:A}, ${2:B}, ${3:C}, ${4:D}] = butter(${1:n}, ${2:Wn}, ${3:ftype}, ${4:optional_'s'})'''
        description: '''[A, B, C, D] = butter(n, Wn, ftype, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/butter.html'


    "dpssdir":
        prefix: "dpssdir"
        body: '''${1:index} = dpssdir(${1:nw}, ${2:'nw'})'''
        description: '''index = dpssdir(nw, 'nw')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dpssdir.html'


    "tf2latc":
        prefix: "tf2latc"
        body: '''${1:k} = tf2latc(${1:b}, ${2:'phase'})'''
        description: '''k = tf2latc(b, 'phase')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tf2latc.html'


    "blackmanharris":
        prefix: "blackmanharris"
        body: '''${1:w} = blackmanharris(${1:N}, ${2:optional_SFLAG})'''
        description: '''w = blackmanharris(N, optional_SFLAG)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/blackmanharris.html'


    "flattopwin":
        prefix: "flattopwin"
        body: '''${1:w} = flattopwin(${1:L}, ${2:optional_sflag})'''
        description: '''w = flattopwin(L, optional_sflag)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/flattopwin.html'


    "isdouble":
        prefix: "isdouble"
        body: '''${1:flag} = isdouble(${1:d})'''
        description: '''flag = isdouble(d)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/isdouble.html'


    "pulseperiod":
        prefix: "pulseperiod"
        body: '''[${1:P}, ${2:INITCROSS}, ${3:FINALCROSS}, ${4:NEXTCROSS}, ${5:MIDLEV}] = pulseperiod(${1:X}, ${2:optional_T}, 'MidPercentReferenceLevel', ${3:value}, 'Polarity', ${4:value}, 'StateLevels', ${5:value}, 'Tolerance', ${6:value})'''
        description: '''[P, INITCROSS, FINALCROSS, NEXTCROSS, MIDLEV] = pulseperiod(X, optional_T, 'MidPercentReferenceLevel', value, 'Polarity', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pulseperiod.html'


    "decimate":
        prefix: "decimate"
        body: '''${1:y} = decimate(${1:x}, ${2:r}, ${3:n}, ${4:optional_'fir'})'''
        description: '''y = decimate(x, r, n, optional_'fir')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/decimate.html'


    "chebwin":
        prefix: "chebwin"
        body: '''${1:w} = chebwin(${1:L}, ${2:optional_r})'''
        description: '''w = chebwin(L, optional_r)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/chebwin.html'


    "ellipord":
        prefix: "ellipord"
        body: '''[${1:n}, ${2:Wp}] = ellipord(${1:Wp}, ${2:Ws}, ${3:Rp}, ${4:Rs}, ${5:optional_'s'})'''
        description: '''[n, Wp] = ellipord(Wp, Ws, Rp, Rs, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ellipord.html'


    "buffer":
        prefix: "buffer"
        body: '''[${1:y}, ${2:z}, ${3:opt}] = buffer(${1:x}, ${2:n}, ${3:p}, ${4:optional_opt})'''
        description: '''[y, z, opt] = buffer(x, n, p, optional_opt)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/buffer.html'


    "tukeywin":
        prefix: "tukeywin"
        body: '''${1:w} = tukeywin(${1:L}, ${2:optional_r})'''
        description: '''w = tukeywin(L, optional_r)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tukeywin.html'


    "ismaxphase":
        prefix: "ismaxphase"
        body: '''${1:flag} = ismaxphase(${1:d}, ${2:optional_tol})'''
        description: '''flag = ismaxphase(d, optional_tol)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ismaxphase.html'


    "rectwin":
        prefix: "rectwin"
        body: '''${1:w} = rectwin(${1:L})'''
        description: '''w = rectwin(L)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rectwin.html'


    "envelope":
        prefix: "envelope"
        body: '''[${1:yupper}, ${2:ylower}] = envelope(${1:x}, ${2:np}, ${3:'peak'})'''
        description: '''[yupper, ylower] = envelope(x, np, 'peak')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/envelope.html'


    "impz":
        prefix: "impz"
        body: '''[${1:h}, ${2:t}] = impz(${1:d}, ${2:n}, ${3:optional_fs})'''
        description: '''[h, t] = impz(d, n, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/impz.html'


    "sos2zp":
        prefix: "sos2zp"
        body: '''[${1:z}, ${2:p}, ${3:k}] = sos2zp(${1:sos}, ${2:optional_g})'''
        description: '''[z, p, k] = sos2zp(sos, optional_g)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sos2zp.html'


    "rpmtrack":
        prefix: "rpmtrack"
        body: '''[${1:rpm}, ${2:tout}] = rpmtrack(${1:xt}, ${2:order}, ${3:p}, 'Method', ${4:value}, 'FrequencyResolution', ${5:value}, 'PowerPenalty', ${6:value}, 'FrequencyPenalty', ${7:value}, 'StartTime', ${8:value}, 'EndTime', ${9:value})'''
        description: '''[rpm, tout] = rpmtrack(xt, order, p, 'Method', value, 'FrequencyResolution', value, 'PowerPenalty', value, 'FrequencyPenalty', value, 'StartTime', value, 'EndTime', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rpmtrack.html'


    "cheb2ap":
        prefix: "cheb2ap"
        body: '''[${1:z}, ${2:p}, ${3:k}] = cheb2ap(${1:n}, ${2:Rs})'''
        description: '''[z, p, k] = cheb2ap(n, Rs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cheb2ap.html'


    "sinc":
        prefix: "sinc"
        body: '''${1:y} = sinc(${1:x})'''
        description: '''y = sinc(x)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sinc.html'


    "cheb2ord":
        prefix: "cheb2ord"
        body: '''[${1:n}, ${2:Ws}] = cheb2ord(${1:Wp}, ${2:Ws}, ${3:Rp}, ${4:Rs}, ${5:optional_'s'})'''
        description: '''[n, Ws] = cheb2ord(Wp, Ws, Rp, Rs, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cheb2ord.html'


    "filtfilt":
        prefix: "filtfilt"
        body: '''${1:y} = filtfilt(${1:d}, ${2:x})'''
        description: '''y = filtfilt(d, x)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/filtfilt.html'


    "rooteig":
        prefix: "rooteig"
        body: '''[${1:f}, ${2:pow}] = rooteig(${1:x}, ${2:p}, ${3:optional_fs}, ${4:optional_'corr'})'''
        description: '''[f, pow] = rooteig(x, p, optional_fs, optional_'corr')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rooteig.html'


    "islinphase":
        prefix: "islinphase"
        body: '''${1:flag} = islinphase(${1:d}, ${2:optional_tol})'''
        description: '''flag = islinphase(d, optional_tol)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/islinphase.html'


    "peak2peak":
        prefix: "peak2peak"
        body: '''${1:Y} = peak2peak(${1:X}, ${2:optional_DIM})'''
        description: '''Y = peak2peak(X, optional_DIM)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/peak2peak.html'


    "rceps":
        prefix: "rceps"
        body: '''[${1:y}, ${2:ym}] = rceps(${1:x})'''
        description: '''[y, ym] = rceps(x)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rceps.html'


    "besself":
        prefix: "besself"
        body: '''[${1:A}, ${2:B}, ${3:C}, ${4:D}] = besself(${1:n}, ${2:Wo}, ${3:optional_ftype})'''
        description: '''[A, B, C, D] = besself(n, Wo, optional_ftype)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/besself.html'


    "rms":
        prefix: "rms"
        body: '''${1:y} = rms(${1:x}, ${2:optional_dim})'''
        description: '''y = rms(x, optional_dim)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rms.html'


    "powerbw":
        prefix: "powerbw"
        body: '''[${1:bw}, ${2:flo}, ${3:fhi}, ${4:power}] = powerbw(${1:sxx}, ${2:f}, ${3:rbw}, ${4:freqrange}, ${5:optional_r})'''
        description: '''[bw, flo, fhi, power] = powerbw(sxx, f, rbw, freqrange, optional_r)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/powerbw.html'


    "highpass":
        prefix: "highpass"
        body: '''[${1:y}, ${2:d}] = highpass(${1:xt}, ${2:fpass}, 'ImpulseResponse', ${3:value}, 'Steepness', ${4:value}, 'StopbandAttenuation', ${5:value})'''
        description: '''[y, d] = highpass(xt, fpass, 'ImpulseResponse', value, 'Steepness', value, 'StopbandAttenuation', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/highpass.html'


    "tfestimate":
        prefix: "tfestimate"
        body: '''[${1:txy}, ${2:f}] = tfestimate(${1:x}, ${2:y}, ${3:window}, ${4:noverlap}, ${5:f}, ${6:fs}, ${7:optional_'mimo'}, ${8:optional_freqrange}, ${9:'Estimator'}, ${10:est})'''
        description: '''[txy, f] = tfestimate(x, y, window, noverlap, f, fs, optional_'mimo', optional_freqrange, 'Estimator', est)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tfestimate.html'


    "dpss":
        prefix: "dpss"
        body: '''[${1:dps_seq}, ${2:lambda}] = dpss(${1:seq_length}, ${2:time_halfbandwidth}, ${3:'interp_method'}, ${4:optional_Ni}, ${5:optional_'trace'})'''
        description: '''[dps_seq, lambda] = dpss(seq_length, time_halfbandwidth, 'interp_method', optional_Ni, optional_'trace')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dpss.html'


    "filt2block":
        prefix: "filt2block"
        body: '''filt2block(${1:d}, ${2:optional_'subsystem'}, ${3:'FilterStructure'}, ${4:optional_structure}, 'Destination', ${5:value}, 'BlockName', ${6:value}, 'OverwriteBlock', ${7:value}, 'MapCoefficientsToPorts', ${8:value}, 'CoefficientNames', ${9:value}, 'FrameBasedProcessing', ${10:value}, 'OptimizeZeros', ${11:value}, 'OptimizeOnes', ${12:value}, 'OptimizeNegativeOnes', ${13:value}, 'OptimizeDelayChains', ${14:value})'''
        description: '''filt2block(d, optional_'subsystem', 'FilterStructure', optional_structure, 'Destination', value, 'BlockName', value, 'OverwriteBlock', value, 'MapCoefficientsToPorts', value, 'CoefficientNames', value, 'FrameBasedProcessing', value, 'OptimizeZeros', value, 'OptimizeOnes', value, 'OptimizeNegativeOnes', value, 'OptimizeDelayChains', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/filt2block.html'


    "freqs":
        prefix: "freqs"
        body: '''[${1:h}, ${2:w}] = freqs(${1:b}, ${2:a}, ${3:n})'''
        description: '''[h, w] = freqs(b, a, n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/freqs.html'


    "gauspuls":
        prefix: "gauspuls"
        body: '''${1:tc} = gauspuls(${1:'cutoff'}, ${2:fc}, ${3:bw}, ${4:bwr}, ${5:optional_tpe})'''
        description: '''tc = gauspuls('cutoff', fc, bw, bwr, optional_tpe)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/gauspuls.html'


    "rpmfreqmap":
        prefix: "rpmfreqmap"
        body: '''[${1:map}, ${2:freq}, ${3:rpm}, ${4:time}, ${5:res}] = rpmfreqmap(${1:x}, ${2:fs}, ${3:rpm}, ${4:res}, 'Amplitude', ${5:value}, 'OverlapPercent', ${6:value}, 'Scale', ${7:value}, 'Window', ${8:value})'''
        description: '''[map, freq, rpm, time, res] = rpmfreqmap(x, fs, rpm, res, 'Amplitude', value, 'OverlapPercent', value, 'Scale', value, 'Window', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rpmfreqmap.html'


    "pcov":
        prefix: "pcov"
        body: '''[${1:pxx}, ${2:f}, ${3:pxxc}] = pcov(${1:x}, ${2:order}, ${3:f}, ${4:fs}, ${5:optional_freqrange}, ${6:'ConfidenceLevel'}, ${7:optional_probability})'''
        description: '''[pxx, f, pxxc] = pcov(x, order, f, fs, optional_freqrange, 'ConfidenceLevel', optional_probability)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pcov.html'


    "cfirpm":
        prefix: "cfirpm"
        body: '''[${1:b}, ${2:delta}, ${3:opt}] = cfirpm(${1:n}, ${2:f}, ${3:a}, ${4:optional_w}, ${5:optional_'sym'}, ${6:optional_'skip_stage2'}, ${7:optional_'debug'}, ${8:optional_{lgrid}})'''
        description: '''[b, delta, opt] = cfirpm(n, f, a, optional_w, optional_'sym', optional_'skip_stage2', optional_'debug', optional_{lgrid})'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cfirpm.html'


    "dpsssave":
        prefix: "dpsssave"
        body: '''${1:status} = dpsssave(${1:time_halfbandwidth}, ${2:dps_seq}, ${3:lambda})'''
        description: '''status = dpsssave(time_halfbandwidth, dps_seq, lambda)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dpsssave.html'


    "rpmordermap":
        prefix: "rpmordermap"
        body: '''[${1:map}, ${2:order}, ${3:rpm}, ${4:time}, ${5:res}] = rpmordermap(${1:x}, ${2:fs}, ${3:rpm}, ${4:res}, 'Amplitude', ${5:value}, 'OverlapPercent', ${6:value}, 'Scale', ${7:value}, 'Window', ${8:value})'''
        description: '''[map, order, rpm, time, res] = rpmordermap(x, fs, rpm, res, 'Amplitude', value, 'OverlapPercent', value, 'Scale', value, 'Window', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rpmordermap.html'


    "modulate":
        prefix: "modulate"
        body: '''[${1:y}, ${2:t}] = modulate(${1:x}, ${2:fc}, ${3:fs}, ${4:'method'}, ${5:optional_opt})'''
        description: '''[y, t] = modulate(x, fc, fs, 'method', optional_opt)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/modulate.html'


    "lpc":
        prefix: "lpc"
        body: '''[${1:a}, ${2:g}] = lpc(${1:x}, ${2:p})'''
        description: '''[a, g] = lpc(x, p)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lpc.html'


    "pmusic":
        prefix: "pmusic"
        body: '''[${1:S}, ${2:f}, ${3:v}, ${4:e}] = pmusic(${1:x}, ${2:p}, ${3:nfft}, ${4:fs}, ${5:nwin}, ${6:noverlap}, ${7:optional_'corr'}, ${8:optional_freqrange})'''
        description: '''[S, f, v, e] = pmusic(x, p, nfft, fs, nwin, noverlap, optional_'corr', optional_freqrange)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pmusic.html'


    "pwelch":
        prefix: "pwelch"
        body: '''[${1:pxx}, ${2:f}, ${3:pxxc}] = pwelch(${1:x}, ${2:window}, ${3:noverlap}, ${4:f}, ${5:fs}, ${6:optional_freqrange}, ${7:optional_spectrumtype}, ${8:optional_trace}, ${9:'ConfidenceLevel'}, ${10:optional_probability})'''
        description: '''[pxx, f, pxxc] = pwelch(x, window, noverlap, f, fs, optional_freqrange, optional_spectrumtype, optional_trace, 'ConfidenceLevel', optional_probability)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pwelch.html'


    "impzlength":
        prefix: "impzlength"
        body: '''${1:len} = impzlength(${1:d}, ${2:optional_tol})'''
        description: '''len = impzlength(d, optional_tol)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/impzlength.html'


    "diric":
        prefix: "diric"
        body: '''${1:y} = diric(${1:x}, ${2:n})'''
        description: '''y = diric(x, n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/diric.html'


    "lp2bp":
        prefix: "lp2bp"
        body: '''[${1:At}, ${2:Bt}, ${3:Ct}, ${4:Dt}] = lp2bp(${1:A}, ${2:B}, ${3:C}, ${4:D}, ${5:Wo}, ${6:Bw})'''
        description: '''[At, Bt, Ct, Dt] = lp2bp(A, B, C, D, Wo, Bw)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lp2bp.html'


    "bitrevorder":
        prefix: "bitrevorder"
        body: '''[${1:y}, ${2:i}] = bitrevorder(${1:x})'''
        description: '''[y, i] = bitrevorder(x)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/bitrevorder.html'


    "snr":
        prefix: "snr"
        body: '''[${1:r}, ${2:noisepow}] = snr(${1:sxx}, ${2:f}, ${3:rbw}, ${4:optional_n}, ${5:'power'}, ${6:optional_'aliased'})'''
        description: '''[r, noisepow] = snr(sxx, f, rbw, optional_n, 'power', optional_'aliased')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/snr.html'


    "sgolayfilt":
        prefix: "sgolayfilt"
        body: '''${1:y} = sgolayfilt(${1:x}, ${2:order}, ${3:framelen}, ${4:weights}, ${5:optional_dim})'''
        description: '''y = sgolayfilt(x, order, framelen, weights, optional_dim)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sgolayfilt.html'


    "dutycycle":
        prefix: "dutycycle"
        body: '''${1:D} = dutycycle(${1:TAU}, ${2:PRF})'''
        description: '''D = dutycycle(TAU, PRF)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dutycycle.html'


    "edr":
        prefix: "edr"
        body: '''[${1:dist}, ${2:ix}, ${3:iy}] = edr(${1:x}, ${2:y}, ${3:tol}, ${4:optional_maxsamp}, ${5:optional_metric})'''
        description: '''[dist, ix, iy] = edr(x, y, tol, optional_maxsamp, optional_metric)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/edr.html'


    "arcov":
        prefix: "arcov"
        body: '''[${1:a}, ${2:e}] = arcov(${1:x}, ${2:p})'''
        description: '''[a, e] = arcov(x, p)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/arcov.html'


    "obw":
        prefix: "obw"
        body: '''[${1:bw}, ${2:flo}, ${3:fhi}, ${4:power}] = obw(${1:sxx}, ${2:f}, ${3:rbw}, ${4:freqrange}, ${5:optional_p})'''
        description: '''[bw, flo, fhi, power] = obw(sxx, f, rbw, freqrange, optional_p)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/obw.html'


    "ac2poly":
        prefix: "ac2poly"
        body: '''[${1:a}, ${2:efinal}] = ac2poly(${1:r})'''
        description: '''[a, efinal] = ac2poly(r)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ac2poly.html'


    "firpm":
        prefix: "firpm"
        body: '''${1:b} = firpm(${1:n}, ${2:f}, ${3:@fresp}, ${4:w}, ${5:optional_'ftype'})'''
        description: '''b = firpm(n, f, @fresp, w, optional_'ftype')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/firpm.html'


    "instfreq":
        prefix: "instfreq"
        body: '''[${1:ifq}, ${2:t}] = instfreq(${1:tfd}, ${2:fd}, ${3:td}, 'FrequencyLimits', ${4:value}, 'Method', ${5:value})'''
        description: '''[ifq, t] = instfreq(tfd, fd, td, 'FrequencyLimits', value, 'Method', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/instfreq.html'


    "cheb1ap":
        prefix: "cheb1ap"
        body: '''[${1:z}, ${2:p}, ${3:k}] = cheb1ap(${1:n}, ${2:Rp})'''
        description: '''[z, p, k] = cheb1ap(n, Rp)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cheb1ap.html'


    "cusum":
        prefix: "cusum"
        body: '''[${1:iupper}, ${2:ilower}, ${3:uppersum}, ${4:lowersum}] = cusum(${1:x}, ${2:climit}, ${3:mshift}, ${4:tmean}, ${5:tdev}, ${6:optional_'all'})'''
        description: '''[iupper, ilower, uppersum, lowersum] = cusum(x, climit, mshift, tmean, tdev, optional_'all')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cusum.html'


    "lsf2poly":
        prefix: "lsf2poly"
        body: '''${1:a} = lsf2poly(${1:lsf})'''
        description: '''a = lsf2poly(lsf)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lsf2poly.html'


    "latcfilt":
        prefix: "latcfilt"
        body: '''[${1:f}, ${2:g}, ${3:zf}] = latcfilt(${1:k}, ${2:1}, ${3:x}, ${4:'ic'}, ${5:zi}, ${6:optional_dim})'''
        description: '''[f, g, zf] = latcfilt(k, 1, x, 'ic', zi, optional_dim)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/latcfilt.html'


    "orderwaveform":
        prefix: "orderwaveform"
        body: '''${1:xrec} = orderwaveform(${1:x}, ${2:fs}, ${3:rpm}, ${4:orderlist}, ${5:optional_rpmrefidx}, 'FilterOrder', ${6:value}, 'Bandwidth', ${7:value}, 'Decouple', ${8:value}, 'SegmentLength', ${9:value})'''
        description: '''xrec = orderwaveform(x, fs, rpm, orderlist, optional_rpmrefidx, 'FilterOrder', value, 'Bandwidth', value, 'Decouple', value, 'SegmentLength', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/orderwaveform.html'


    "latc2tf":
        prefix: "latc2tf"
        body: '''[${1:num}, ${2:den}] = latc2tf(${1:k}, ${2:'firoption'})'''
        description: '''[num, den] = latc2tf(k, 'firoption')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/latc2tf.html'


    "upsample":
        prefix: "upsample"
        body: '''${1:y} = upsample(${1:x}, ${2:n}, ${3:optional_phase})'''
        description: '''y = upsample(x, n, optional_phase)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/upsample.html'


    "levinson":
        prefix: "levinson"
        body: '''[${1:a}, ${2:e}, ${3:k}] = levinson(${1:r}, ${2:n})'''
        description: '''[a, e, k] = levinson(r, n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/levinson.html'


    "pulsesep":
        prefix: "pulsesep"
        body: '''[${1:S}, ${2:INITCROSS}, ${3:FINALCROSS}, ${4:NEXTCROSS}, ${5:MIDLEV}] = pulsesep(${1:X}, ${2:optional_T}, 'MidPercentReferenceLevel', ${3:value}, 'Polarity', ${4:value}, 'StateLevels', ${5:value}, 'Tolerance', ${6:value})'''
        description: '''[S, INITCROSS, FINALCROSS, NEXTCROSS, MIDLEV] = pulsesep(X, optional_T, 'MidPercentReferenceLevel', value, 'Polarity', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pulsesep.html'


    "buttap":
        prefix: "buttap"
        body: '''[${1:z}, ${2:p}, ${3:k}] = buttap(${1:n})'''
        description: '''[z, p, k] = buttap(n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/buttap.html'


    "barthannwin":
        prefix: "barthannwin"
        body: '''${1:w} = barthannwin(${1:L})'''
        description: '''w = barthannwin(L)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/barthannwin.html'


    "zplane":
        prefix: "zplane"
        body: '''[${1:vz}, ${2:vp}, ${3:vk}] = zplane(${1:d})'''
        description: '''[vz, vp, vk] = zplane(d)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/zplane.html'


    "isallpass":
        prefix: "isallpass"
        body: '''${1:flag} = isallpass(${1:d}, ${2:optional_tol})'''
        description: '''flag = isallpass(d, optional_tol)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/isallpass.html'


    "midcross":
        prefix: "midcross"
        body: '''[${1:C}, ${2:MIDLEV}] = midcross(${1:X}, ${2:optional_T}, 'MidPercentReferenceLevel', ${3:value}, 'StateLevels', ${4:value}, 'Tolerance', ${5:value})'''
        description: '''[C, MIDLEV] = midcross(X, optional_T, 'MidPercentReferenceLevel', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/midcross.html'


    "bandpass":
        prefix: "bandpass"
        body: '''[${1:y}, ${2:d}] = bandpass(${1:xt}, ${2:fpass}, 'ImpulseResponse', ${3:value}, 'Steepness', ${4:value}, 'StopbandAttenuation', ${5:value})'''
        description: '''[y, d] = bandpass(xt, fpass, 'ImpulseResponse', value, 'Steepness', value, 'StopbandAttenuation', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/bandpass.html'


    "downsample":
        prefix: "downsample"
        body: '''${1:y} = downsample(${1:x}, ${2:n}, ${3:optional_phase})'''
        description: '''y = downsample(x, n, optional_phase)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/downsample.html'


    "interp":
        prefix: "interp"
        body: '''[${1:y}, ${2:b}] = interp(${1:x}, ${2:r}, ${3:n}, ${4:optional_alpha})'''
        description: '''[y, b] = interp(x, r, n, optional_alpha)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/interp.html'


    "pkurtosis":
        prefix: "pkurtosis"
        body: '''[${1:sk}, ${2:f}, ${3:thresh}] = pkurtosis(${1:s}, ${2:sampx}, ${3:f}, ${4:window}, ${5:'ConfidenceLevel'}, ${6:p})'''
        description: '''[sk, f, thresh] = pkurtosis(s, sampx, f, window, 'ConfidenceLevel', p)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pkurtosis.html'


    "firpmord":
        prefix: "firpmord"
        body: '''${1:c} = firpmord(${1:f}, ${2:a}, ${3:dev}, ${4:fs}, ${5:'cell'})'''
        description: '''c = firpmord(f, a, dev, fs, 'cell')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/firpmord.html'


    "phasez":
        prefix: "phasez"
        body: '''${1:phi} = phasez(${1:d}, ${2:optional_f}, ${3:optional_fs})'''
        description: '''phi = phasez(d, optional_f, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/phasez.html'


    "resample":
        prefix: "resample"
        body: '''[${1:y}, ${2:ty}, ${3:b}] = resample(${1:x}, ${2:tx}, ${3:fs}, ${4:optional_p}, ${5:q}, ${6:optional_method})'''
        description: '''[y, ty, b] = resample(x, tx, fs, optional_p, q, optional_method)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/resample.html'


    "rc2poly":
        prefix: "rc2poly"
        body: '''[${1:a}, ${2:efinal}] = rc2poly(${1:k}, ${2:optional_r0})'''
        description: '''[a, efinal] = rc2poly(k, optional_r0)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rc2poly.html'


    "sosfilt":
        prefix: "sosfilt"
        body: '''${1:y} = sosfilt(${1:sos}, ${2:x}, ${3:optional_dim})'''
        description: '''y = sosfilt(sos, x, optional_dim)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sosfilt.html'


    "schurrc":
        prefix: "schurrc"
        body: '''[${1:k}, ${2:e}] = schurrc(${1:r})'''
        description: '''[k, e] = schurrc(r)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/schurrc.html'


    "unshiftdata":
        prefix: "unshiftdata"
        body: '''${1:y} = unshiftdata(${1:x}, ${2:perm}, ${3:nshifts})'''
        description: '''y = unshiftdata(x, perm, nshifts)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/unshiftdata.html'


    "mag2db":
        prefix: "mag2db"
        body: '''${1:ydb} = mag2db(${1:y})'''
        description: '''ydb = mag2db(y)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/mag2db.html'


    "modalfit":
        prefix: "modalfit"
        body: '''[${1:fn}, ${2:dr}, ${3:ms}, ${4:ofrf}] = modalfit(${1:sys}, ${2:f}, ${3:mnum}, 'Feedthrough', ${4:value}, 'FitMethod', ${5:value}, 'FreqRange', ${6:value}, 'PhysFreq', ${7:value}, 'DriveIndex', ${8:value})'''
        description: '''[fn, dr, ms, ofrf] = modalfit(sys, f, mnum, 'Feedthrough', value, 'FitMethod', value, 'FreqRange', value, 'PhysFreq', value, 'DriveIndex', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/modalfit.html'


    "rc2ac":
        prefix: "rc2ac"
        body: '''${1:r} = rc2ac(${1:k}, ${2:r0})'''
        description: '''r = rc2ac(k, r0)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rc2ac.html'


    "toi":
        prefix: "toi"
        body: '''[${1:oip3}, ${2:fundpow}, ${3:fundfreq}, ${4:imodpow}, ${5:imodfreq}] = toi(${1:sxx}, ${2:f}, ${3:rbw}, ${4:'power'})'''
        description: '''[oip3, fundpow, fundfreq, imodpow, imodfreq] = toi(sxx, f, rbw, 'power')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/toi.html'


    "db":
        prefix: "db"
        body: '''${1:dboutput} = db(${1:x}, ${2:optional_SignalType}, ${3:optional_R})'''
        description: '''dboutput = db(x, optional_SignalType, optional_R)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/db.html'


    "idct":
        prefix: "idct"
        body: '''${1:x} = idct(${1:y}, ${2:optional_n}, ${3:optional_dim}, ${4:'Type'}, ${5:dcttype})'''
        description: '''x = idct(y, optional_n, optional_dim, 'Type', dcttype)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/idct.html'


    "bohmanwin":
        prefix: "bohmanwin"
        body: '''${1:w} = bohmanwin(${1:L})'''
        description: '''w = bohmanwin(L)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/bohmanwin.html'


    "pow2db":
        prefix: "pow2db"
        body: '''${1:ydb} = pow2db(${1:y})'''
        description: '''ydb = pow2db(y)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pow2db.html'


    "kaiser":
        prefix: "kaiser"
        body: '''${1:w} = kaiser(${1:L}, ${2:optional_beta})'''
        description: '''w = kaiser(L, optional_beta)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/kaiser.html'


    "isminphase":
        prefix: "isminphase"
        body: '''${1:flag} = isminphase(${1:d}, ${2:optional_tol})'''
        description: '''flag = isminphase(d, optional_tol)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/isminphase.html'


    "vco":
        prefix: "vco"
        body: '''${1:c} = vco(${1:x}, ${2:[Fmin Fmax]}, ${3:fs})'''
        description: '''c = vco(x, [Fmin Fmax], fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/vco.html'


    "invfreqs":
        prefix: "invfreqs"
        body: '''[${1:b}, ${2:a}] = invfreqs(${1:h}, ${2:w}, ${3:'complex'}, ${4:n}, ${5:m}, ${6:wt}, ${7:iter}, ${8:tol}, ${9:optional_'trace'})'''
        description: '''[b, a] = invfreqs(h, w, 'complex', n, m, wt, iter, tol, optional_'trace')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/invfreqs.html'


    "tripuls":
        prefix: "tripuls"
        body: '''${1:y} = tripuls(${1:T}, ${2:optional_w}, ${3:optional_s})'''
        description: '''y = tripuls(T, optional_w, optional_s)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tripuls.html'


    "ordertrack":
        prefix: "ordertrack"
        body: '''[${1:mag}, ${2:rpm}, ${3:time}] = ordertrack(${1:map}, ${2:order}, ${3:rpm}, ${4:orderlist})'''
        description: '''[mag, rpm, time] = ordertrack(map, order, rpm, orderlist)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ordertrack.html'


    "tf2sos":
        prefix: "tf2sos"
        body: '''[${1:sos}, ${2:g}] = tf2sos(${1:b}, ${2:a}, ${3:'order'}, ${4:optional_'scale'})'''
        description: '''[sos, g] = tf2sos(b, a, 'order', optional_'scale')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tf2sos.html'


    "xspectrogram":
        prefix: "xspectrogram"
        body: '''[${1:s}, ${2:f}, ${3:t}, ${4:c}] = xspectrogram(${1:x}, ${2:y}, ${3:window}, ${4:noverlap}, ${5:f}, ${6:fs}, ${7:optional_freqrange}, ${8:optional_spectrumtype}, ${9:'MinThreshold'}, ${10:thresh}, ${11:optional_freqloc}, 'OutputTimeDimension', ${12:value})'''
        description: '''[s, f, t, c] = xspectrogram(x, y, window, noverlap, f, fs, optional_freqrange, optional_spectrumtype, 'MinThreshold', thresh, optional_freqloc, 'OutputTimeDimension', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/xspectrogram.html'


    "issingle":
        prefix: "issingle"
        body: '''${1:flag} = issingle(${1:d})'''
        description: '''flag = issingle(d)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/issingle.html'


    "rootmusic":
        prefix: "rootmusic"
        body: '''[${1:f}, ${2:pow}] = rootmusic(${1:x}, ${2:p}, ${3:optional_fs}, ${4:optional_'corr'})'''
        description: '''[f, pow] = rootmusic(x, p, optional_fs, optional_'corr')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rootmusic.html'


    "cell2sos":
        prefix: "cell2sos"
        body: '''${1:m} = cell2sos(${1:c})'''
        description: '''m = cell2sos(c)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cell2sos.html'


    "armcov":
        prefix: "armcov"
        body: '''[${1:a}, ${2:e}] = armcov(${1:x}, ${2:p})'''
        description: '''[a, e] = armcov(x, p)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/armcov.html'


    "lp2lp":
        prefix: "lp2lp"
        body: '''[${1:At}, ${2:Bt}, ${3:Ct}, ${4:Dt}] = lp2lp(${1:A}, ${2:B}, ${3:C}, ${4:D}, ${5:Wo})'''
        description: '''[At, Bt, Ct, Dt] = lp2lp(A, B, C, D, Wo)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lp2lp.html'


    "fwht":
        prefix: "fwht"
        body: '''${1:y} = fwht(${1:x}, ${2:n}, ${3:optional_ordering})'''
        description: '''y = fwht(x, n, optional_ordering)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fwht.html'


    "tfridge":
        prefix: "tfridge"
        body: '''[${1:fridge}, ${2:iridge}, ${3:lridge}] = tfridge(${1:tfm}, ${2:f}, ${3:penalty}, ${4:'NumRidges'}, ${5:nr}, ${6:'NumFrequencyBins'}, ${7:nbins})'''
        description: '''[fridge, iridge, lridge] = tfridge(tfm, f, penalty, 'NumRidges', nr, 'NumFrequencyBins', nbins)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tfridge.html'


    "zerophase":
        prefix: "zerophase"
        body: '''[${1:Hr}, ${2:f}] = zerophase(${1:d}, ${2:f}, ${3:optional_fs})'''
        description: '''[Hr, f] = zerophase(d, f, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/zerophase.html'


    "taylorwin":
        prefix: "taylorwin"
        body: '''${1:w} = taylorwin(${1:n}, ${2:nbar}, ${3:optional_sll})'''
        description: '''w = taylorwin(n, nbar, optional_sll)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/taylorwin.html'


    "invfreqz":
        prefix: "invfreqz"
        body: '''[${1:b}, ${2:a}] = invfreqz(${1:h}, ${2:w}, ${3:'complex'}, ${4:n}, ${5:m}, ${6:wt}, ${7:iter}, ${8:tol}, ${9:optional_'trace'})'''
        description: '''[b, a] = invfreqz(h, w, 'complex', n, m, wt, iter, tol, optional_'trace')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/invfreqz.html'


    "double":
        prefix: "double"
        body: '''${1:f2} = double(${1:f1})'''
        description: '''f2 = double(f1)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/double.html'


    "sinad":
        prefix: "sinad"
        body: '''[${1:r}, ${2:totdistpow}] = sinad(${1:sxx}, ${2:f}, ${3:rbw}, ${4:'power'})'''
        description: '''[r, totdistpow] = sinad(sxx, f, rbw, 'power')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sinad.html'


    "tf2zpk":
        prefix: "tf2zpk"
        body: '''[${1:z}, ${2:p}, ${3:k}] = tf2zpk(${1:b}, ${2:a})'''
        description: '''[z, p, k] = tf2zpk(b, a)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/tf2zpk.html'


    "fircls":
        prefix: "fircls"
        body: '''${1:b} = fircls(${1:n}, ${2:f}, ${3:amp}, ${4:up}, ${5:lo}, ${6:optional_'design_flag'})'''
        description: '''b = fircls(n, f, amp, up, lo, optional_'design_flag')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/fircls.html'


    "goertzel":
        prefix: "goertzel"
        body: '''${1:dft_data} = goertzel(${1:data}, ${2:freq_indices}, ${3:optional_dim})'''
        description: '''dft_data = goertzel(data, freq_indices, optional_dim)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/goertzel.html'


    "seqperiod":
        prefix: "seqperiod"
        body: '''[${1:p}, ${2:num}] = seqperiod(${1:x})'''
        description: '''[p, num] = seqperiod(x)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/seqperiod.html'


    "czt":
        prefix: "czt"
        body: '''${1:y} = czt(${1:x}, ${2:m}, ${3:w}, ${4:a})'''
        description: '''y = czt(x, m, w, a)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/czt.html'


    "cconv":
        prefix: "cconv"
        body: '''${1:c} = cconv(${1:gpuArrayA}, ${2:gpuArrayB}, ${3:n})'''
        description: '''c = cconv(gpuArrayA, gpuArrayB, n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cconv.html'


    "info":
        prefix: "info"
        body: '''${1:s} = info(${1:d})'''
        description: '''s = info(d)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/info.html'


    "iscola":
        prefix: "iscola"
        body: '''[${1:tf}, ${2:m}, ${3:maxDeviation}] = iscola(${1:window}, ${2:noverlap}, ${3:optional_method})'''
        description: '''[tf, m, maxDeviation] = iscola(window, noverlap, optional_method)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/iscola.html'


    "blackman":
        prefix: "blackman"
        body: '''${1:w} = blackman(${1:N}, ${2:optional_SFLAG})'''
        description: '''w = blackman(N, optional_SFLAG)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/blackman.html'


    "uencode":
        prefix: "uencode"
        body: '''${1:y} = uencode(${1:u}, ${2:n}, ${3:v}, ${4:optional_'SignFlag'})'''
        description: '''y = uencode(u, n, v, optional_'SignFlag')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/uencode.html'


    "firtype":
        prefix: "firtype"
        body: '''${1:t} = firtype(${1:d})'''
        description: '''t = firtype(d)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/firtype.html'


    "stmcb":
        prefix: "stmcb"
        body: '''[${1:b}, ${2:a}] = stmcb(${1:y}, ${2:x}, ${3:nb}, ${4:na}, ${5:niter}, ${6:optional_ai})'''
        description: '''[b, a] = stmcb(y, x, nb, na, niter, optional_ai)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/stmcb.html'


    "cheb1ord":
        prefix: "cheb1ord"
        body: '''[${1:n}, ${2:Wp}] = cheb1ord(${1:Wp}, ${2:Ws}, ${3:Rp}, ${4:Rs}, ${5:optional_'s'})'''
        description: '''[n, Wp] = cheb1ord(Wp, Ws, Rp, Rs, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cheb1ord.html'


    "dpssload":
        prefix: "dpssload"
        body: '''[${1:e}, ${2:v}] = dpssload(${1:n}, ${2:nw})'''
        description: '''[e, v] = dpssload(n, nw)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dpssload.html'


    "cheby1":
        prefix: "cheby1"
        body: '''[${1:A}, ${2:B}, ${3:C}, ${4:D}] = cheby1(${1:n}, ${2:Rp}, ${3:Wp}, ${4:ftype}, ${5:optional_'s'})'''
        description: '''[A, B, C, D] = cheby1(n, Rp, Wp, ftype, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/cheby1.html'


    "istft":
        prefix: "istft"
        body: '''[${1:X}, ${2:T}] = istft(${1:S}, ${2:optional_Ts}, 'Window', ${3:value}, 'OverlapLength', ${4:value}, 'FFTLength', ${5:value}, 'Method', ${6:value}, 'ConjugateSymmetric', ${7:value}, 'Centered', ${8:value}, 'InputTimeDimension', ${9:value})'''
        description: '''[X, T] = istft(S, optional_Ts, 'Window', value, 'OverlapLength', value, 'FFTLength', value, 'Method', value, 'ConjugateSymmetric', value, 'Centered', value, 'InputTimeDimension', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/istft.html'


    "firls":
        prefix: "firls"
        body: '''${1:b} = firls(${1:n}, ${2:f}, ${3:a}, ${4:optional_'ftype'})'''
        description: '''b = firls(n, f, a, optional_'ftype')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/firls.html'


    "poly2ac":
        prefix: "poly2ac"
        body: '''${1:r} = poly2ac(${1:a}, ${2:efinal})'''
        description: '''r = poly2ac(a, efinal)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/poly2ac.html'


    "corrmtx":
        prefix: "corrmtx"
        body: '''[${1:X}, ${2:R}] = corrmtx(${1:x}, ${2:m}, ${3:optional_method})'''
        description: '''[X, R] = corrmtx(x, m, optional_method)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/corrmtx.html'


    "periodogram":
        prefix: "periodogram"
        body: '''[${1:rpxx}, ${2:f}, ${3:pxx}, ${4:fc}] = periodogram(${1:x}, ${2:window}, ${3:f}, ${4:fs}, ${5:optional_freqrange}, ${6:optional_spectrumtype}, ${7:optional_'reassigned'})'''
        description: '''[rpxx, f, pxx, fc] = periodogram(x, window, f, fs, optional_freqrange, optional_spectrumtype, optional_'reassigned')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/periodogram.html'


    "kaiserord":
        prefix: "kaiserord"
        body: '''${1:c} = kaiserord(${1:f}, ${2:a}, ${3:dev}, ${4:fs}, ${5:'cell'})'''
        description: '''c = kaiserord(f, a, dev, fs, 'cell')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/kaiserord.html'


    "buttord":
        prefix: "buttord"
        body: '''[${1:n}, ${2:Wn}] = buttord(${1:Wp}, ${2:Ws}, ${3:Rp}, ${4:Rs}, ${5:optional_'s'})'''
        description: '''[n, Wn] = buttord(Wp, Ws, Rp, Rs, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/buttord.html'


    "dftmtx":
        prefix: "dftmtx"
        body: '''${1:A} = dftmtx(${1:n})'''
        description: '''A = dftmtx(n)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dftmtx.html'


    "lp2bs":
        prefix: "lp2bs"
        body: '''[${1:At}, ${2:Bt}, ${3:Ct}, ${4:Dt}] = lp2bs(${1:A}, ${2:B}, ${3:C}, ${4:D}, ${5:Wo}, ${6:Bw})'''
        description: '''[At, Bt, Ct, Dt] = lp2bs(A, B, C, D, Wo, Bw)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lp2bs.html'


    "envspectrum":
        prefix: "envspectrum"
        body: '''[${1:es}, ${2:f}, ${3:env}, ${4:t}] = envspectrum(${1:xt}, 'Method', ${2:value}, 'Band', ${3:value}, 'FilterOrder', ${4:value})'''
        description: '''[es, f, env, t] = envspectrum(xt, 'Method', value, 'Band', value, 'FilterOrder', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/envspectrum.html'


    "modalsd":
        prefix: "modalsd"
        body: '''${1:fn} = modalsd(${1:frf}, ${2:f}, ${3:fs}, 'FitMethod', ${4:value}, 'FreqRange', ${5:value}, 'MaxModes', ${6:value}, 'SCriteria', ${7:value})'''
        description: '''fn = modalsd(frf, f, fs, 'FitMethod', value, 'FreqRange', value, 'MaxModes', value, 'SCriteria', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/modalsd.html'


    "stft":
        prefix: "stft"
        body: '''[${1:S}, ${2:F}, ${3:T}] = stft(${1:X}, ${2:optional_Ts}, 'Window', ${3:value}, 'OverlapLength', ${4:value}, 'FFTLength', ${5:value}, 'Centered', ${6:value}, 'OutputTimeDimension', ${7:value})'''
        description: '''[S, F, T] = stft(X, optional_Ts, 'Window', value, 'OverlapLength', value, 'FFTLength', value, 'Centered', value, 'OutputTimeDimension', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/stft.html'


    "filtic":
        prefix: "filtic"
        body: '''${1:z} = filtic(${1:b}, ${2:a}, ${3:y}, ${4:optional_x})'''
        description: '''z = filtic(b, a, y, optional_x)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/filtic.html'


    "sos2tf":
        prefix: "sos2tf"
        body: '''[${1:b}, ${2:a}] = sos2tf(${1:sos}, ${2:optional_g})'''
        description: '''[b, a] = sos2tf(sos, optional_g)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sos2tf.html'


    "demod":
        prefix: "demod"
        body: '''${1:x} = demod(${1:y}, ${2:fc}, ${3:fs}, ${4:'pwm'}, ${5:'centered'})'''
        description: '''x = demod(y, fc, fs, 'pwm', 'centered')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/demod.html'


    "rlevinson":
        prefix: "rlevinson"
        body: '''[${1:r}, ${2:u}, ${3:k}, ${4:e}] = rlevinson(${1:a}, ${2:efinal})'''
        description: '''[r, u, k, e] = rlevinson(a, efinal)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/rlevinson.html'


    "xcov":
        prefix: "xcov"
        body: '''[${1:c}, ${2:lags}] = xcov(${1:x}, ${2:optional_y}, ${3:optional_maxlag}, ${4:optional_scaleopt})'''
        description: '''[c, lags] = xcov(x, optional_y, optional_maxlag, optional_scaleopt)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/xcov.html'


    "undershoot":
        prefix: "undershoot"
        body: '''[${1:OS}, ${2:OSLEV}, ${3:OSINST}] = undershoot(${1:X}, ${2:optional_T}, 'PercentReferenceLevels', ${3:value}, 'Region', ${4:value}, 'SeekFactor', ${5:value}, 'StateLevels', ${6:value}, 'Tolerance', ${7:value})'''
        description: '''[OS, OSLEV, OSINST] = undershoot(X, optional_T, 'PercentReferenceLevels', value, 'Region', value, 'SeekFactor', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/undershoot.html'


    "sos2cell":
        prefix: "sos2cell"
        body: '''${1:c} = sos2cell(${1:m}, ${2:optional_g})'''
        description: '''c = sos2cell(m, optional_g)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sos2cell.html'


    "maxflat":
        prefix: "maxflat"
        body: '''${1:b} = maxflat(${1:n}, ${2:'sym'}, ${3:Wn}, ${4:optional_'design_flag'})'''
        description: '''b = maxflat(n, 'sym', Wn, optional_'design_flag')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/maxflat.html'


    "digitrevorder":
        prefix: "digitrevorder"
        body: '''[${1:y}, ${2:i}] = digitrevorder(${1:x}, ${2:r})'''
        description: '''[y, i] = digitrevorder(x, r)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/digitrevorder.html'


    "polyscale":
        prefix: "polyscale"
        body: '''${1:b} = polyscale(${1:a}, ${2:alpha})'''
        description: '''b = polyscale(a, alpha)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/polyscale.html'


    "finddelay":
        prefix: "finddelay"
        body: '''${1:D} = finddelay(${1:X}, ${2:Y}, ${3:optional_maxlag})'''
        description: '''D = finddelay(X, Y, optional_maxlag)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/finddelay.html'


    "dpssclear":
        prefix: "dpssclear"
        body: '''dpssclear(${1:n}, ${2:nw})'''
        description: '''dpssclear(n, nw)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/dpssclear.html'


    "impinvar":
        prefix: "impinvar"
        body: '''[${1:bz}, ${2:az}] = impinvar(${1:b}, ${2:a}, ${3:fs}, ${4:optional_tol})'''
        description: '''[bz, az] = impinvar(b, a, fs, optional_tol)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/impinvar.html'


    "pulstran":
        prefix: "pulstran"
        body: '''${1:y} = pulstran(${1:t}, ${2:d}, ${3:p}, ${4:optional_fs})'''
        description: '''y = pulstran(t, d, p, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pulstran.html'


    "ifwht":
        prefix: "ifwht"
        body: '''${1:y} = ifwht(${1:x}, ${2:n}, ${3:optional_ordering})'''
        description: '''y = ifwht(x, n, optional_ordering)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ifwht.html'


    "is2rc":
        prefix: "is2rc"
        body: '''${1:k} = is2rc(${1:isin})'''
        description: '''k = is2rc(isin)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/is2rc.html'


    "slewrate":
        prefix: "slewrate"
        body: '''[${1:S}, ${2:LT}, ${3:UT}, ${4:LL}, ${5:UL}] = slewrate(${1:X}, ${2:optional_T}, 'PercentReferenceLevels', ${3:value}, 'StateLevels', ${4:value}, 'Tolerance', ${5:value})'''
        description: '''[S, LT, UT, LL, UL] = slewrate(X, optional_T, 'PercentReferenceLevels', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/slewrate.html'


    "pentropy":
        prefix: "pentropy"
        body: '''[${1:se}, ${2:t}] = pentropy(${1:p}, ${2:fp}, ${3:tp}, 'Instantaneous', ${4:value}, 'Scaled', ${5:value}, 'FrequencyLimits', ${6:value}, 'TimeLimits', ${7:value})'''
        description: '''[se, t] = pentropy(p, fp, tp, 'Instantaneous', value, 'Scaled', value, 'FrequencyLimits', value, 'TimeLimits', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pentropy.html'


    "sfdr":
        prefix: "sfdr"
        body: '''[${1:r}, ${2:spurpow}, ${3:spurfreq}] = sfdr(${1:sxx}, ${2:f}, ${3:optional_msd}, ${4:'power'})'''
        description: '''[r, spurpow, spurfreq] = sfdr(sxx, f, optional_msd, 'power')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/sfdr.html'


    "plomb":
        prefix: "plomb"
        body: '''[${1:pxx}, ${2:fvec}] = plomb(${1:x}, ${2:fs}, ${3:fvec}, ${4:optional_spectrumtype})'''
        description: '''[pxx, fvec] = plomb(x, fs, fvec, optional_spectrumtype)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/plomb.html'


    "findpeaks":
        prefix: "findpeaks"
        body: '''[${1:pks}, ${2:locs}, ${3:w}, ${4:p}] = findpeaks(${1:data}, ${2:Fs}, 'NPeaks', ${3:value}, 'SortStr', ${4:value}, 'MinPeakHeight', ${5:value}, 'MinPeakProminence', ${6:value}, 'Threshold', ${7:value}, 'MinPeakDistance', ${8:value}, 'WidthReference', ${9:value}, 'MinPeakWidth', ${10:value}, 'MaxPeakWidth', ${11:value}, 'Annotate', ${12:value})'''
        description: '''[pks, locs, w, p] = findpeaks(data, Fs, 'NPeaks', value, 'SortStr', value, 'MinPeakHeight', value, 'MinPeakProminence', value, 'Threshold', value, 'MinPeakDistance', value, 'WidthReference', value, 'MinPeakWidth', value, 'MaxPeakWidth', value, 'Annotate', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/findpeaks.html'


    "medfilt1":
        prefix: "medfilt1"
        body: '''${1:y} = medfilt1(${1:x}, ${2:optional_n}, ${3:optional_nanflag}, ${4:optional_padding})'''
        description: '''y = medfilt1(x, optional_n, optional_nanflag, optional_padding)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/medfilt1.html'


    "ellip":
        prefix: "ellip"
        body: '''[${1:A}, ${2:B}, ${3:C}, ${4:D}] = ellip(${1:n}, ${2:Rp}, ${3:Rs}, ${4:Wp}, ${5:ftype}, ${6:optional_'s'})'''
        description: '''[A, B, C, D] = ellip(n, Rp, Rs, Wp, ftype, optional_'s')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/ellip.html'


    "lp2hp":
        prefix: "lp2hp"
        body: '''[${1:At}, ${2:Bt}, ${3:Ct}, ${4:Dt}] = lp2hp(${1:A}, ${2:B}, ${3:C}, ${4:D}, ${5:Wo})'''
        description: '''[At, Bt, Ct, Dt] = lp2hp(A, B, C, D, Wo)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/lp2hp.html'


    "pulsewidth":
        prefix: "pulsewidth"
        body: '''[${1:W}, ${2:INITCROSS}, ${3:FINALCROSS}, ${4:MIDLEV}] = pulsewidth(${1:X}, ${2:optional_T}, 'MidPercentReferenceLevel', ${3:value}, 'Polarity', ${4:value}, 'StateLevels', ${5:value}, 'Tolerance', ${6:value})'''
        description: '''[W, INITCROSS, FINALCROSS, MIDLEV] = pulsewidth(X, optional_T, 'MidPercentReferenceLevel', value, 'Polarity', value, 'StateLevels', value, 'Tolerance', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pulsewidth.html'


    "peig":
        prefix: "peig"
        body: '''[${1:S}, ${2:f}, ${3:v}, ${4:e}] = peig(${1:x}, ${2:p}, ${3:nfft}, ${4:fs}, ${5:nwin}, ${6:noverlap}, ${7:optional_'corr'}, ${8:optional_freqrange})'''
        description: '''[S, f, v, e] = peig(x, p, nfft, fs, nwin, noverlap, optional_'corr', optional_freqrange)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/peig.html'


    "grpdelay":
        prefix: "grpdelay"
        body: '''${1:gd} = grpdelay(${1:d}, ${2:f}, ${3:optional_fs})'''
        description: '''gd = grpdelay(d, f, optional_fs)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/grpdelay.html'


    "pmcov":
        prefix: "pmcov"
        body: '''[${1:pxx}, ${2:f}, ${3:pxxc}] = pmcov(${1:x}, ${2:order}, ${3:f}, ${4:fs}, ${5:optional_freqrange}, ${6:'ConfidenceLevel'}, ${7:optional_probability})'''
        description: '''[pxx, f, pxxc] = pmcov(x, order, f, fs, optional_freqrange, 'ConfidenceLevel', optional_probability)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/pmcov.html'


    "spectrogram":
        prefix: "spectrogram"
        body: '''[${1:s}, ${2:f}, ${3:t}, ${4:ps}, ${5:fc}, ${6:tc}] = spectrogram(${1:x}, ${2:window}, ${3:noverlap}, ${4:f}, ${5:fs}, ${6:'reassigned'}, ${7:optional_freqrange}, ${8:optional_spectrumtype}, ${9:'MinThreshold'}, ${10:thresh}, ${11:optional_freqloc}, 'OutputTimeDimension', ${12:value})'''
        description: '''[s, f, t, ps, fc, tc] = spectrogram(x, window, noverlap, f, fs, 'reassigned', optional_freqrange, optional_spectrumtype, 'MinThreshold', thresh, optional_freqloc, 'OutputTimeDimension', value)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/spectrogram.html'


    "xcorr2":
        prefix: "xcorr2"
        body: '''${1:c} = xcorr2(${1:a}, ${2:optional_b})'''
        description: '''c = xcorr2(a, optional_b)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/xcorr2.html'


    "arburg":
        prefix: "arburg"
        body: '''[${1:a}, ${2:e}, ${3:rc}] = arburg(${1:x}, ${2:p})'''
        description: '''[a, e, rc] = arburg(x, p)'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/arburg.html'


    "intfilt":
        prefix: "intfilt"
        body: '''${1:b} = intfilt(${1:l}, ${2:n}, ${3:'Lagrange'})'''
        description: '''b = intfilt(l, n, 'Lagrange')'''
        descriptionMoreURL: 'https://www.mathworks.com/help/signal/ref/intfilt.html'

