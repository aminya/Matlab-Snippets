# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
".source.matlab":

    "uint16":
    prefix: "uint16"
    body: '''${1:y} = uint16(${1:x})'''
    description: '''${1:y} = uint16(${1:x})'''


    "ge":
    prefix: "ge"
    body: '''${1:tf} = ge(${1:A}, ${2:B})'''
    description: '''${1:tf} = ge(${1:A}, ${2:B})'''


    "uint8":
    prefix: "uint8"
    body: '''${1:y} = uint8(${1:x})'''
    description: '''${1:y} = uint8(${1:x})'''


    "ismatrix":
    prefix: "ismatrix"
    body: '''${1:TF} = ismatrix(${1:V})'''
    description: '''${1:TF} = ismatrix(${1:V})'''


    "length":
    prefix: "length"
    body: '''${1:L} = length(${1:X})'''
    description: '''${1:L} = length(${1:X})'''


    "maxk":
    prefix: "maxk"
    body: '''[${1:B}, ${2:I}] = maxk(${1:A}, ${2:k}, ${3:dim})'''
    description: '''[${1:B}, ${2:I}] = maxk(${1:A}, ${2:k}, ${3:dim})'''


    "countcats":
    prefix: "countcats"
    body: '''${1:B} = countcats(${1:A}, ${2:dim})'''
    description: '''${1:B} = countcats(${1:A}, ${2:dim})'''


    "uint32":
    prefix: "uint32"
    body: '''${1:y} = uint32(${1:x})'''
    description: '''${1:y} = uint32(${1:x})'''


    "union":
    prefix: "union"
    body: '''[${1:C}, ${2:ia}, ${3:ib}] = union(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''
    description: '''[${1:C}, ${2:ia}, ${3:ib}] = union(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''


    "issortedrows":
    prefix: "issortedrows"
    body: '''${1:TF} = issortedrows(${1:A}, ${2:column}, ${3:direction}, 'MissingPlacement', ${4:value})'''
    description: '''${1:TF} = issortedrows(${1:A}, ${2:column}, ${3:direction}, 'MissingPlacement', ${4:value})'''


    "iscategorical":
    prefix: "iscategorical"
    body: '''${1:tf} = iscategorical(${1:A})'''
    description: '''${1:tf} = iscategorical(${1:A})'''


    "reordercats":
    prefix: "reordercats"
    body: '''${1:B} = reordercats(${1:A}, ${2:neworder})'''
    description: '''${1:B} = reordercats(${1:A}, ${2:neworder})'''


    "setxor":
    prefix: "setxor"
    body: '''[${1:C}, ${2:ia}, ${3:ib}] = setxor(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''
    description: '''[${1:C}, ${2:ia}, ${3:ib}] = setxor(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''


    "setcats":
    prefix: "setcats"
    body: '''${1:B} = setcats(${1:A}, ${2:newcats})'''
    description: '''${1:B} = setcats(${1:A}, ${2:newcats})'''


    "uint64":
    prefix: "uint64"
    body: '''${1:y} = uint64(${1:x})'''
    description: '''${1:y} = uint64(${1:x})'''


    "eq":
    prefix: "eq"
    body: '''${1:tf} = eq(${1:A}, ${2:B})'''
    description: '''${1:tf} = eq(${1:A}, ${2:B})'''


    "intersect":
    prefix: "intersect"
    body: '''[${1:C}, ${2:ia}, ${3:ib}] = intersect(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''
    description: '''[${1:C}, ${2:ia}, ${3:ib}] = intersect(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''


    "int16":
    prefix: "int16"
    body: '''${1:y} = int16(${1:x})'''
    description: '''${1:y} = int16(${1:x})'''


    "max":
    prefix: "max"
    body: '''${1:C} = max(${1:A}, ${2:B}, ${3:nanflag})'''
    description: '''${1:C} = max(${1:A}, ${2:B}, ${3:nanflag})'''


    "addcats":
    prefix: "addcats"
    body: '''${1:B} = addcats(${1:A}, ${2:newcats}, 'Before', ${3:value}, 'After', ${4:value})'''
    description: '''${1:B} = addcats(${1:A}, ${2:newcats}, 'Before', ${3:value}, 'After', ${4:value})'''


    "char":
    prefix: "char"
    body: '''${1:S} = char(${1:A})'''
    description: '''${1:S} = char(${1:A})'''


    "cat":
    prefix: "cat"
    body: '''${1:C} = cat(${1:dim}, ${2:A}, ${3:B})'''
    description: '''${1:C} = cat(${1:dim}, ${2:A}, ${3:B})'''


    "sort":
    prefix: "sort"
    body: '''[${1:B}, ${2:I}] = sort(${1:A}, ${2:dim}, ${3:direction}, 'MissingPlacement', ${4:value})'''
    description: '''[${1:B}, ${2:I}] = sort(${1:A}, ${2:dim}, ${3:direction}, 'MissingPlacement', ${4:value})'''


    "sortrows":
    prefix: "sortrows"
    body: '''[${1:B}, ${2:Index}] = sortrows(${1:A}, ${2:column}, ${3:direction}, 'MissingPlacement', ${4:value})'''
    description: '''[${1:B}, ${2:Index}] = sortrows(${1:A}, ${2:column}, ${3:direction}, 'MissingPlacement', ${4:value})'''


    "categories":
    prefix: "categories"
    body: '''${1:C} = categories(${1:A})'''
    description: '''${1:C} = categories(${1:A})'''


    "topkrows":
    prefix: "topkrows"
    body: '''[${1:B}, ${2:Index}] = topkrows(${1:A}, ${2:k}, ${3:column}, ${4:direction})'''
    description: '''[${1:B}, ${2:Index}] = topkrows(${1:A}, ${2:k}, ${3:column}, ${4:direction})'''


    "removecats":
    prefix: "removecats"
    body: '''${1:B} = removecats(${1:A}, ${2:oldcats})'''
    description: '''${1:B} = removecats(${1:A}, ${2:oldcats})'''


    "ismember":
    prefix: "ismember"
    body: '''[${1:Lia}, ${2:Locb}] = ismember(${1:A}, ${2:B}, ${3:'rows'})'''
    description: '''[${1:Lia}, ${2:Locb}] = ismember(${1:A}, ${2:B}, ${3:'rows'})'''


    "ctranspose":
    prefix: "ctranspose"
    body: '''${1:B} = ctranspose(${1:A})'''
    description: '''${1:B} = ctranspose(${1:A})'''


    "mode":
    prefix: "mode"
    body: '''[${1:M}, ${2:F}, ${3:C}] = mode(${1:A}, ${2:dim})'''
    description: '''[${1:M}, ${2:F}, ${3:C}] = mode(${1:A}, ${2:dim})'''


    "vertcat":
    prefix: "vertcat"
    body: '''${1:C} = vertcat(${1:A})'''
    description: '''${1:C} = vertcat(${1:A})'''


    "times":
    prefix: "times"
    body: '''${1:C} = times(${1:A}, ${2:B})'''
    description: '''${1:C} = times(${1:A}, ${2:B})'''


    "isprotected":
    prefix: "isprotected"
    body: '''${1:tf} = isprotected(${1:A})'''
    description: '''${1:tf} = isprotected(${1:A})'''


    "isrow":
    prefix: "isrow"
    body: '''${1:TF} = isrow(${1:V})'''
    description: '''${1:TF} = isrow(${1:V})'''


    "int64":
    prefix: "int64"
    body: '''${1:y} = int64(${1:x})'''
    description: '''${1:y} = int64(${1:x})'''


    "isempty":
    prefix: "isempty"
    body: '''${1:TF} = isempty(${1:A})'''
    description: '''${1:TF} = isempty(${1:A})'''


    "setdiff":
    prefix: "setdiff"
    body: '''[${1:C}, ${2:ia}] = setdiff(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''
    description: '''[${1:C}, ${2:ia}] = setdiff(${1:A}, ${2:B}, ${3:'rows'}, ${4:setOrder})'''


    "histcounts":
    prefix: "histcounts"
    body: '''[${1:N}, ${2:categories}] = histcounts(${1:C}, ${2:Categories}, 'Normalization', ${3:value})'''
    description: '''[${1:N}, ${2:categories}] = histcounts(${1:C}, ${2:Categories}, 'Normalization', ${3:value})'''


    "cellstr":
    prefix: "cellstr"
    body: '''${1:C} = cellstr(${1:S})'''
    description: '''${1:C} = cellstr(${1:S})'''


    "unique":
    prefix: "unique"
    body: '''[${1:C}, ${2:ia}, ${3:ic}] = unique(${1:A}, ${2:'rows'}, ${3:setOrder})'''
    description: '''[${1:C}, ${2:ia}, ${3:ic}] = unique(${1:A}, ${2:'rows'}, ${3:setOrder})'''


    "isvector":
    prefix: "isvector"
    body: '''${1:TF} = isvector(${1:A})'''
    description: '''${1:TF} = isvector(${1:A})'''


    "single":
    prefix: "single"
    body: '''${1:y} = single(${1:x})'''
    description: '''${1:y} = single(${1:x})'''


    "le":
    prefix: "le"
    body: '''${1:tf} = le(${1:A}, ${2:B})'''
    description: '''${1:tf} = le(${1:A}, ${2:B})'''


    "median":
    prefix: "median"
    body: '''${1:M} = median(${1:A}, ${2:dim}, ${3:nanflag})'''
    description: '''${1:M} = median(${1:A}, ${2:dim}, ${3:nanflag})'''


    "horzcat":
    prefix: "horzcat"
    body: '''${1:C} = horzcat(${1:A})'''
    description: '''${1:C} = horzcat(${1:A})'''


    "isscalar":
    prefix: "isscalar"
    body: '''${1:TF} = isscalar(${1:A})'''
    description: '''${1:TF} = isscalar(${1:A})'''


    "mergecats":
    prefix: "mergecats"
    body: '''${1:B} = mergecats(${1:A}, ${2:oldcats}, ${3:newcats})'''
    description: '''${1:B} = mergecats(${1:A}, ${2:oldcats}, ${3:newcats})'''


    "string":
    prefix: "string"
    body: '''${1:str} = string(${1:A})'''
    description: '''${1:str} = string(${1:A})'''


    "isequaln":
    prefix: "isequaln"
    body: '''${1:tf} = isequaln(${1:A}, ${2:B})'''
    description: '''${1:tf} = isequaln(${1:A}, ${2:B})'''


    "transpose":
    prefix: "transpose"
    body: '''${1:B} = transpose(${1:A})'''
    description: '''${1:B} = transpose(${1:A})'''


    "numel":
    prefix: "numel"
    body: '''${1:n} = numel(${1:A})'''
    description: '''${1:n} = numel(${1:A})'''


    "lt":
    prefix: "lt"
    body: '''${1:tf} = lt(${1:A}, ${2:B})'''
    description: '''${1:tf} = lt(${1:A}, ${2:B})'''


    "int8":
    prefix: "int8"
    body: '''${1:y} = int8(${1:x})'''
    description: '''${1:y} = int8(${1:x})'''


    "min":
    prefix: "min"
    body: '''${1:C} = min(${1:A}, ${2:B}, ${3:nanflag})'''
    description: '''${1:C} = min(${1:A}, ${2:B}, ${3:nanflag})'''


    "mink":
    prefix: "mink"
    body: '''[${1:B}, ${2:I}] = mink(${1:A}, ${2:k}, ${3:dim})'''
    description: '''[${1:B}, ${2:I}] = mink(${1:A}, ${2:k}, ${3:dim})'''


    "int32":
    prefix: "int32"
    body: '''${1:y} = int32(${1:x})'''
    description: '''${1:y} = int32(${1:x})'''


    "isordinal":
    prefix: "isordinal"
    body: '''${1:tf} = isordinal(${1:A})'''
    description: '''${1:tf} = isordinal(${1:A})'''


    "iscolumn":
    prefix: "iscolumn"
    body: '''${1:TF} = iscolumn(${1:V})'''
    description: '''${1:TF} = iscolumn(${1:V})'''


    "summary":
    prefix: "summary"
    body: '''summary(${1:A}, ${2:dim})'''
    description: '''summary(${1:A}, ${2:dim})'''


    "iscategory":
    prefix: "iscategory"
    body: '''${1:tf} = iscategory(${1:A}, ${2:catnames})'''
    description: '''${1:tf} = iscategory(${1:A}, ${2:catnames})'''


    "isequal":
    prefix: "isequal"
    body: '''${1:tf} = isequal(${1:A}, ${2:B})'''
    description: '''${1:tf} = isequal(${1:A}, ${2:B})'''


    "issorted":
    prefix: "issorted"
    body: '''${1:TF} = issorted(${1:A}, ${2:dim}, ${3:direction}, 'MissingPlacement', ${4:value})'''
    description: '''${1:TF} = issorted(${1:A}, ${2:dim}, ${3:direction}, 'MissingPlacement', ${4:value})'''


    "categorical":
    prefix: "categorical"
    body: '''${1:C} = categorical(${1:A}, ${2:valueset}, ${3:catnames}, 'Protected', ${4:value}, 'Ordinal', ${5:value})'''
    description: '''${1:C} = categorical(${1:A}, ${2:valueset}, ${3:catnames}, 'Protected', ${4:value}, 'Ordinal', ${5:value})'''


    "gt":
    prefix: "gt"
    body: '''${1:tf} = gt(${1:A}, ${2:B})'''
    description: '''${1:tf} = gt(${1:A}, ${2:B})'''


    "ne":
    prefix: "ne"
    body: '''${1:tf} = ne(${1:A}, ${2:B})'''
    description: '''${1:tf} = ne(${1:A}, ${2:B})'''


    "double":
    prefix: "double"
    body: '''${1:y} = double(${1:x})'''
    description: '''${1:y} = double(${1:x})'''


    "isundefined":
    prefix: "isundefined"
    body: '''${1:tf} = isundefined(${1:A})'''
    description: '''${1:tf} = isundefined(${1:A})'''


    "permute":
    prefix: "permute"
    body: '''${1:B} = permute(${1:A}, ${2:order})'''
    description: '''${1:B} = permute(${1:A}, ${2:order})'''


    "renamecats":
    prefix: "renamecats"
    body: '''${1:B} = renamecats(${1:A}, ${2:oldnames}, ${3:newnames})'''
    description: '''${1:B} = renamecats(${1:A}, ${2:oldnames}, ${3:newnames})'''

