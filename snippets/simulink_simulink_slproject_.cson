# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
'.source.matlab, source.m':

    "slproject.ProjectManager.removeReference":
        prefix: "slproject.ProjectManager.removeReference"
        body: '''slproject.ProjectManager.removeReference(${1:proj}, ${2:folder})'''
        description: '''slproject.ProjectManager.removeReference(proj, folder)'''


    "slproject.ProjectFile.removeLabel":
        prefix: "slproject.ProjectFile.removeLabel"
        body: '''slproject.ProjectFile.removeLabel(${1:category}, ${2:labelName})'''
        description: '''slproject.ProjectFile.removeLabel(category, labelName)'''


    "slproject.ProjectManager.addReference":
        prefix: "slproject.ProjectManager.addReference"
        body: '''${1:projectReference} = slproject.ProjectManager.addReference(${1:proj}, ${2:folder})'''
        description: '''projectReference = slproject.ProjectManager.addReference(proj, folder)'''


    "slproject.loadProject":
        prefix: "slproject.loadProject"
        body: '''${1:proj} = slproject.loadProject(${1:projectPath})'''
        description: '''proj = slproject.loadProject(projectPath)'''


    "slproject.ProjectManager.export":
        prefix: "slproject.ProjectManager.export"
        body: '''slproject.ProjectManager.export(${1:proj}, ${2:zipFileName}, ${3:definitionType})'''
        description: '''slproject.ProjectManager.export(proj, zipFileName, definitionType)'''


    "slproject.ProjectManager.removeCategory":
        prefix: "slproject.ProjectManager.removeCategory"
        body: '''slproject.ProjectManager.removeCategory(${1:proj}, ${2:categoryName})'''
        description: '''slproject.ProjectManager.removeCategory(proj, categoryName)'''


    "slproject.ProjectManager.addFile":
        prefix: "slproject.ProjectManager.addFile"
        body: '''${1:projectFile} = slproject.ProjectManager.addFile(${1:proj}, ${2:file})'''
        description: '''projectFile = slproject.ProjectManager.addFile(proj, file)'''


    "slproject.ProjectManager.addPath":
        prefix: "slproject.ProjectManager.addPath"
        body: '''${1:projectPath} = slproject.ProjectManager.addPath(${1:proj}, ${2:folder})'''
        description: '''projectPath = slproject.ProjectManager.addPath(proj, folder)'''


    "slproject.ProjectManager.findCategory":
        prefix: "slproject.ProjectManager.findCategory"
        body: '''${1:category} = slproject.ProjectManager.findCategory(${1:proj}, ${2:categoryName})'''
        description: '''category = slproject.ProjectManager.findCategory(proj, categoryName)'''


    "slproject.ProjectManager.removeFile":
        prefix: "slproject.ProjectManager.removeFile"
        body: '''slproject.ProjectManager.removeFile(${1:proj}, ${2:file})'''
        description: '''slproject.ProjectManager.removeFile(proj, file)'''


    "slproject.ProjectManager.findFile":
        prefix: "slproject.ProjectManager.findFile"
        body: '''${1:file} = slproject.ProjectManager.findFile(${1:proj}, ${2:fileName})'''
        description: '''file = slproject.ProjectManager.findFile(proj, fileName)'''


    "slproject.ProjectManager.removePath":
        prefix: "slproject.ProjectManager.removePath"
        body: '''slproject.ProjectManager.removePath(${1:proj}, ${2:folder})'''
        description: '''slproject.ProjectManager.removePath(proj, folder)'''


    "slproject.ProjectManager.addShortcut":
        prefix: "slproject.ProjectManager.addShortcut"
        body: '''${1:shortcut} = slproject.ProjectManager.addShortcut(${1:proj}, ${2:fileName})'''
        description: '''shortcut = slproject.ProjectManager.addShortcut(proj, fileName)'''


    "slproject.ProjectFile.addLabel":
        prefix: "slproject.ProjectFile.addLabel"
        body: '''${1:labelObject} = slproject.ProjectFile.addLabel(${1:file}, ${2:categoryName}, ${3:label}, ${4:optional_labelData})'''
        description: '''labelObject = slproject.ProjectFile.addLabel(file, categoryName, label, optional_labelData)'''


    "simulinkproject":
        prefix: "simulinkproject"
        body: '''${1:proj} = simulinkproject(${1:projectPath})'''
        description: '''proj = simulinkproject(projectPath)'''


    "slproject.ProjectManager.removeShortcut":
        prefix: "slproject.ProjectManager.removeShortcut"
        body: '''slproject.ProjectManager.removeShortcut(${1:proj}, ${2:file})'''
        description: '''slproject.ProjectManager.removeShortcut(proj, file)'''


    "slproject.ProjectManager.addFolderIncludingChildFiles":
        prefix: "slproject.ProjectManager.addFolderIncludingChildFiles"
        body: '''${1:projectFile} = slproject.ProjectManager.addFolderIncludingChildFiles(${1:proj}, ${2:folder})'''
        description: '''projectFile = slproject.ProjectManager.addFolderIncludingChildFiles(proj, folder)'''


    "slproject.ProjectManager.addStartupFile":
        prefix: "slproject.ProjectManager.addStartupFile"
        body: '''${1:shortcut} = slproject.ProjectManager.addStartupFile(${1:proj}, ${2:fileName})'''
        description: '''shortcut = slproject.ProjectManager.addStartupFile(proj, fileName)'''


    "slproject.ProjectFile.findLabel":
        prefix: "slproject.ProjectFile.findLabel"
        body: '''${1:labelObject} = slproject.ProjectFile.findLabel(${1:category}, ${2:labelName})'''
        description: '''labelObject = slproject.ProjectFile.findLabel(category, labelName)'''


    "slproject.ProjectManager.removeShutdownFile":
        prefix: "slproject.ProjectManager.removeShutdownFile"
        body: '''slproject.ProjectManager.removeShutdownFile(${1:proj}, ${2:file})'''
        description: '''slproject.ProjectManager.removeShutdownFile(proj, file)'''


    "slproject.create":
        prefix: "slproject.create"
        body: '''${1:proj} = slproject.create(${1:projectPath})'''
        description: '''proj = slproject.create(projectPath)'''


    "slproject.ProjectManager.addShutdownFile":
        prefix: "slproject.ProjectManager.addShutdownFile"
        body: '''${1:shortcut} = slproject.ProjectManager.addShutdownFile(${1:proj}, ${2:fileName})'''
        description: '''shortcut = slproject.ProjectManager.addShutdownFile(proj, fileName)'''


    "slproject.ProjectManager.removeStartupFile":
        prefix: "slproject.ProjectManager.removeStartupFile"
        body: '''slproject.ProjectManager.removeStartupFile(${1:proj}, ${2:file})'''
        description: '''slproject.ProjectManager.removeStartupFile(proj, file)'''

