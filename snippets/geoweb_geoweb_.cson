# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
".source.matlab":

    "WebMapServer.getCapabilities":
    prefix: "WebMapServer.getCapabilities"
    body: '''${1:capabilities} = WebMapServer.getCapabilities(${1:server})'''
    description: '''${1:capabilities} = WebMapServer.getCapabilities(${1:server})'''


    "WMSLayer.refine":
    prefix: "WMSLayer.refine"
    body: '''${1:refined} = WMSLayer.refine(${1:layers}, ${2:querystr}, 'IgnoreCase', ${3:value}, 'MatchType', ${4:value}, 'SearchFields', ${5:value})'''
    description: '''${1:refined} = WMSLayer.refine(${1:layers}, ${2:querystr}, 'IgnoreCase', ${3:value}, 'MatchType', ${4:value}, 'SearchFields', ${5:value})'''


    "gpxread":
    prefix: "gpxread"
    body: '''${1:P} = gpxread(${1:filename}, 'FeatureType', ${2:value}, 'Index', ${3:value})'''
    description: '''${1:P} = gpxread(${1:filename}, 'FeatureType', ${2:value}, 'Index', ${3:value})'''


    "WMSCapabilities.disp":
    prefix: "WMSCapabilities.disp"
    body: '''WMSCapabilities.disp(${1:capabilities})'''
    description: '''WMSCapabilities.disp(${1:capabilities})'''


    "wmprint":
    prefix: "wmprint"
    body: '''wmprint(${1:optional_wm})'''
    description: '''wmprint(${1:optional_wm})'''


    "wmclose":
    prefix: "wmclose"
    body: '''wmclose(${1:optional_wm})'''
    description: '''wmclose(${1:optional_wm})'''


    "WMSCapabilities":
    prefix: "WMSCapabilities"
    body: '''${1:capabilities} = WMSCapabilities(${1:serverURL}, ${2:capabilitiesResponse})'''
    description: '''${1:capabilities} = WMSCapabilities(${1:serverURL}, ${2:capabilitiesResponse})'''


    "WMSLayer.disp":
    prefix: "WMSLayer.disp"
    body: '''WMSLayer.disp(${1:layers}, 'Properties', ${2:value}, 'Label', ${3:value}, 'Index', ${4:value})'''
    description: '''WMSLayer.disp(${1:layers}, 'Properties', ${2:value}, 'Label', ${3:value}, 'Index', ${4:value})'''


    "WMSLayer.serverTitles":
    prefix: "WMSLayer.serverTitles"
    body: '''${1:titles} = WMSLayer.serverTitles(${1:layers})'''
    description: '''${1:titles} = WMSLayer.serverTitles(${1:layers})'''


    "WMSLayer.servers":
    prefix: "WMSLayer.servers"
    body: '''${1:serverURLs} = WMSLayer.servers(${1:layers})'''
    description: '''${1:serverURLs} = WMSLayer.servers(${1:layers})'''


    "wmpolygon":
    prefix: "wmpolygon"
    body: '''${1:h} = wmpolygon(${1:optional_wm}, ${2:P}, 'Autofit', ${3:value}, 'Description', ${4:value}, 'OverlayName', ${5:value}, 'FeatureName', ${6:value}, 'LineWidth', ${7:value}, 'FaceColor', ${8:value}, 'FaceAlpha', ${9:value}, 'EdgeColor', ${10:value}, 'EdgeAlpha', ${11:value})'''
    description: '''${1:h} = wmpolygon(${1:optional_wm}, ${2:P}, 'Autofit', ${3:value}, 'Description', ${4:value}, 'OverlayName', ${5:value}, 'FeatureName', ${6:value}, 'LineWidth', ${7:value}, 'FaceColor', ${8:value}, 'FaceAlpha', ${9:value}, 'EdgeColor', ${10:value}, 'EdgeAlpha', ${11:value})'''


    "wmline":
    prefix: "wmline"
    body: '''${1:h} = wmline(${1:optional_wm}, ${2:P}, 'Autofit', ${3:value}, 'Description', ${4:value}, 'OverlayName', ${5:value}, 'FeatureName', ${6:value}, 'LineWidth', ${7:value}, 'Color', ${8:value}, 'Alpha', ${9:value})'''
    description: '''${1:h} = wmline(${1:optional_wm}, ${2:P}, 'Autofit', ${3:value}, 'Description', ${4:value}, 'OverlayName', ${5:value}, 'FeatureName', ${6:value}, 'LineWidth', ${7:value}, 'Color', ${8:value}, 'Alpha', ${9:value})'''


    "wmsfind":
    prefix: "wmsfind"
    body: '''${1:layers} = wmsfind(${1:querystr}, 'IgnoreCase', ${2:value}, 'Latlim', ${3:value}, 'Lonlim', ${4:value}, 'MatchType', ${5:value}, 'SearchFields', ${6:value}, 'Version', ${7:value})'''
    description: '''${1:layers} = wmsfind(${1:querystr}, 'IgnoreCase', ${2:value}, 'Latlim', ${3:value}, 'Lonlim', ${4:value}, 'MatchType', ${5:value}, 'SearchFields', ${6:value}, 'Version', ${7:value})'''


    "WMSLayer.refineLimits":
    prefix: "WMSLayer.refineLimits"
    body: '''${1:refined} = WMSLayer.refineLimits(${1:layers}, 'Latlim', ${2:value}, 'Lonlim', ${3:value})'''
    description: '''${1:refined} = WMSLayer.refineLimits(${1:layers}, 'Latlim', ${2:value}, 'Lonlim', ${3:value})'''


    "wmmarker":
    prefix: "wmmarker"
    body: '''${1:h} = wmmarker(${1:optional_wm}, ${2:P}, 'Autofit', ${3:value}, 'Description', ${4:value}, 'OverlayName', ${5:value}, 'FeatureName', ${6:value}, 'Icon', ${7:value}, 'IconScale', ${8:value}, 'Color', ${9:value}, 'Alpha', ${10:value})'''
    description: '''${1:h} = wmmarker(${1:optional_wm}, ${2:P}, 'Autofit', ${3:value}, 'Description', ${4:value}, 'OverlayName', ${5:value}, 'FeatureName', ${6:value}, 'Icon', ${7:value}, 'IconScale', ${8:value}, 'Color', ${9:value}, 'Alpha', ${10:value})'''


    "WebMapServer.getMap":
    prefix: "WebMapServer.getMap"
    body: '''${1:A} = WebMapServer.getMap(${1:server}, ${2:mapRequestURL})'''
    description: '''${1:A} = WebMapServer.getMap(${1:server}, ${2:mapRequestURL})'''


    "webmap":
    prefix: "webmap"
    body: '''webmap(${1:wm})'''
    description: '''webmap(${1:wm})'''


    "wmzoom":
    prefix: "wmzoom"
    body: '''${1:zoomLevelOut} = wmzoom(${1:optional_wm}, ${2:optional_zoomLevel})'''
    description: '''${1:zoomLevelOut} = wmzoom(${1:optional_wm}, ${2:optional_zoomLevel})'''


    "wmlimits":
    prefix: "wmlimits"
    body: '''[${1:latlim}, ${2:lonlim}] = wmlimits(${1:optional_wm}, ${2:latitudeLimits}, ${3:longitudeLimits})'''
    description: '''[${1:latlim}, ${2:lonlim}] = wmlimits(${1:optional_wm}, ${2:latitudeLimits}, ${3:longitudeLimits})'''


    "wmsinfo":
    prefix: "wmsinfo"
    body: '''[${1:capabilities}, ${2:infoRequestURL}] = wmsinfo(${1:serverURL}, 'TimeoutInSeconds', ${2:value})'''
    description: '''[${1:capabilities}, ${2:infoRequestURL}] = wmsinfo(${1:serverURL}, 'TimeoutInSeconds', ${2:value})'''


    "WebMapServer":
    prefix: "WebMapServer"
    body: '''${1:server} = WebMapServer(${1:serverURL})'''
    description: '''${1:server} = WebMapServer(${1:serverURL})'''


    "WMSLayer":
    prefix: "WMSLayer"
    body: '''${1:layers} = WMSLayer('ServerTitle', ${1:value}, 'ServerURL', ${2:value}, 'LayerTitle', ${3:value}, 'LayerName', ${4:value}, 'Latlim', ${5:value}, 'Lonlim', ${6:value}, 'Abstract', ${7:value}, 'CoordRefSysCodes', ${8:value}, 'Details', ${9:value})'''
    description: '''${1:layers} = WMSLayer('ServerTitle', ${1:value}, 'ServerURL', ${2:value}, 'LayerTitle', ${3:value}, 'LayerName', ${4:value}, 'Latlim', ${5:value}, 'Lonlim', ${6:value}, 'Abstract', ${7:value}, 'CoordRefSysCodes', ${8:value}, 'Details', ${9:value})'''


    "WMSMapRequest.boundImageSize":
    prefix: "WMSMapRequest.boundImageSize"
    body: '''${1:mapBound} = WMSMapRequest.boundImageSize(${1:mapRequest}, ${2:imageLength})'''
    description: '''${1:mapBound} = WMSMapRequest.boundImageSize(${1:mapRequest}, ${2:imageLength})'''


    "wmcenter":
    prefix: "wmcenter"
    body: '''[${1:lat}, ${2:lon}] = wmcenter(${1:optional_wm}, ${2:centerLatitude}, ${3:centerLongitude}, ${4:optional_zoomLevel})'''
    description: '''[${1:lat}, ${2:lon}] = wmcenter(${1:optional_wm}, ${2:centerLatitude}, ${3:centerLongitude}, ${4:optional_zoomLevel})'''


    "WebMapServer.updateLayers":
    prefix: "WebMapServer.updateLayers"
    body: '''[${1:updatedLayer}, ${2:index}] = WebMapServer.updateLayers(${1:server}, ${2:layer})'''
    description: '''[${1:updatedLayer}, ${2:index}] = WebMapServer.updateLayers(${1:server}, ${2:layer})'''


    "wmsread":
    prefix: "wmsread"
    body: '''[${1:A}, ${2:R}, ${3:mapRequestURL}] = wmsread(${1:layer}, 'latlim', ${2:value}, 'lonlim', ${3:value}, 'ImageHeight', ${4:value}, 'ImageWidth', ${5:value}, 'CellSize', ${6:value}, 'RelTolCellSize', ${7:value}, 'ImageFormat', ${8:value}, 'StyleName', ${9:value}, 'Transparent', ${10:value}, 'BackgroundColor', ${11:value}, 'Elevation', ${12:value}, 'Time', ${13:value}, 'SampleDimension', ${14:value}, 'TimeoutInSeconds', ${15:value})'''
    description: '''[${1:A}, ${2:R}, ${3:mapRequestURL}] = wmsread(${1:layer}, 'latlim', ${2:value}, 'lonlim', ${3:value}, 'ImageHeight', ${4:value}, 'ImageWidth', ${5:value}, 'CellSize', ${6:value}, 'RelTolCellSize', ${7:value}, 'ImageFormat', ${8:value}, 'StyleName', ${9:value}, 'Transparent', ${10:value}, 'BackgroundColor', ${11:value}, 'Elevation', ${12:value}, 'Time', ${13:value}, 'SampleDimension', ${14:value}, 'TimeoutInSeconds', ${15:value})'''


    "WMSMapRequest":
    prefix: "WMSMapRequest"
    body: '''${1:mapRequest} = WMSMapRequest(${1:layer}, ${2:optional_server})'''
    description: '''${1:mapRequest} = WMSMapRequest(${1:layer}, ${2:optional_server})'''


    "wmsupdate":
    prefix: "wmsupdate"
    body: '''[${1:updatedLayers}, ${2:index}] = wmsupdate(${1:layers}, 'TimeoutInSeconds', ${2:value}, 'AllowMultipleServers', ${3:value})'''
    description: '''[${1:updatedLayers}, ${2:index}] = wmsupdate(${1:layers}, 'TimeoutInSeconds', ${2:value}, 'AllowMultipleServers', ${3:value})'''


    "wmremove":
    prefix: "wmremove"
    body: '''wmremove(${1:optional_h})'''
    description: '''wmremove(${1:optional_h})'''

