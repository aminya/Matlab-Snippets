# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
'.source.matlab, source.m':

    "denoisingImageDatastore":
        prefix: "denoisingImageDatastore"
        body: '''${1:source} = denoisingImageDatastore(${1:imds}, 'PatchesPerImage', ${2:value}, 'PatchSize', ${3:value}, 'GaussianNoiseLevel', ${4:value}, 'BackgroundExecution', ${5:value}, 'ChannelFormat', ${6:value})'''
        description: '''${1:source} = denoisingImageDatastore(${1:imds}, 'PatchesPerImage', ${2:value}, 'PatchSize', ${3:value}, 'GaussianNoiseLevel', ${4:value}, 'BackgroundExecution', ${5:value}, 'ChannelFormat', ${6:value})'''


    "denoiseImage":
        prefix: "denoiseImage"
        body: '''${1:I} = denoiseImage(${1:A}, ${2:net})'''
        description: '''${1:I} = denoiseImage(${1:A}, ${2:net})'''


    "denoisingNetwork":
        prefix: "denoisingNetwork"
        body: '''${1:net} = denoisingNetwork(${1:ModelName})'''
        description: '''${1:net} = denoisingNetwork(${1:ModelName})'''


    "randomPatchExtractionDatastore":
        prefix: "randomPatchExtractionDatastore"
        body: '''${1:source} = randomPatchExtractionDatastore(${1:imds1}, ${2:imds2}, ${3:patchSize}, 'PatchesPerImage', ${4:value}, 'DispatchInBackground', ${5:value}, 'DataAugmentation', ${6:value})'''
        description: '''${1:source} = randomPatchExtractionDatastore(${1:imds1}, ${2:imds2}, ${3:patchSize}, 'PatchesPerImage', ${4:value}, 'DispatchInBackground', ${5:value}, 'DataAugmentation', ${6:value})'''


    "dnCNNLayers":
        prefix: "dnCNNLayers"
        body: '''${1:layers} = dnCNNLayers('NetworkDepth', ${1:value})'''
        description: '''${1:layers} = dnCNNLayers('NetworkDepth', ${1:value})'''

