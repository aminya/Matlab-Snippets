# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
'.source.matlab, source.m':

    "clibgen.ConstructorDefinition.validate":
        prefix: "clibgen.ConstructorDefinition.validate"
        body: '''clibgen.ConstructorDefinition.validate(${1:ConstructorDefinition})'''
        description: '''clibgen.ConstructorDefinition.validate(ConstructorDefinition)'''


    "clibgen.LibraryDefinition.addProperty":
        prefix: "clibgen.LibraryDefinition.addProperty"
        body: '''${1:PropertyDefinition} = clibgen.LibraryDefinition.addProperty(${1:ClassDefinition}, ${2:CPPName}, ${3:MATLABType}, 'Description', ${4:value})'''
        description: '''PropertyDefinition = clibgen.LibraryDefinition.addProperty(ClassDefinition, CPPName, MATLABType, 'Description', value)'''


    "clibgen.buildInterface":
        prefix: "clibgen.buildInterface"
        body: '''clibgen.buildInterface(${1:HeaderFiles}, 'Verbose', ${2:value}, 'Libraries', ${3:value}, 'IncludePath', ${4:value}, 'OutputFolder', ${5:value}, 'PackageName', ${6:value}, 'TreatObjectPointerAsScalar', ${7:value}, 'TreatConstCharPointerAsCString', ${8:value}, 'DefinedMacros', ${9:value}, 'UndefinedMacros', ${10:value})'''
        description: '''clibgen.buildInterface(HeaderFiles, 'Verbose', value, 'Libraries', value, 'IncludePath', value, 'OutputFolder', value, 'PackageName', value, 'TreatObjectPointerAsScalar', value, 'TreatConstCharPointerAsCString', value, 'DefinedMacros', value, 'UndefinedMacros', value)'''


    "clibgen.LibraryDefinition.addMethod":
        prefix: "clibgen.LibraryDefinition.addMethod"
        body: '''${1:MethodDefinition} = clibgen.LibraryDefinition.addMethod(${1:ClassDefinition}, ${2:CPPName}, 'MATLABName', ${3:value}, 'Description', ${4:value})'''
        description: '''MethodDefinition = clibgen.LibraryDefinition.addMethod(ClassDefinition, CPPName, 'MATLABName', value, 'Description', value)'''


    "clibgen.generateLibraryDefinition":
        prefix: "clibgen.generateLibraryDefinition"
        body: '''clibgen.generateLibraryDefinition(${1:HeaderFiles}, 'Verbose', ${2:value}, 'Libraries', ${3:value}, 'IncludePath', ${4:value}, 'OutputFolder', ${5:value}, 'PackageName', ${6:value}, 'TreatObjectPointerAsScalar', ${7:value}, 'TreatConstCharPointerAsCString', ${8:value}, 'DefinedMacros', ${9:value}, 'UndefinedMacros', ${10:value})'''
        description: '''clibgen.generateLibraryDefinition(HeaderFiles, 'Verbose', value, 'Libraries', value, 'IncludePath', value, 'OutputFolder', value, 'PackageName', value, 'TreatObjectPointerAsScalar', value, 'TreatConstCharPointerAsCString', value, 'DefinedMacros', value, 'UndefinedMacros', value)'''


    "clibgen.ConstructorDefinition.defineArgument":
        prefix: "clibgen.ConstructorDefinition.defineArgument"
        body: '''clibgen.ConstructorDefinition.defineArgument(${1:ConstructorDefinition}, ${2:CPPName}, ${3:MATLABType}, ${4:Direction}, ${5:Shape})'''
        description: '''clibgen.ConstructorDefinition.defineArgument(ConstructorDefinition, CPPName, MATLABType, Direction, Shape)'''


    "clibgen.LibraryDefinition.build":
        prefix: "clibgen.LibraryDefinition.build"
        body: '''clibgen.LibraryDefinition.build(${1:LibraryDefinition})'''
        description: '''clibgen.LibraryDefinition.build(LibraryDefinition)'''


    "clibgen.LibraryDefinition.addFunction":
        prefix: "clibgen.LibraryDefinition.addFunction"
        body: '''${1:FunctionDefinition} = clibgen.LibraryDefinition.addFunction(${1:LibraryDefinition}, ${2:CPPSignature}, 'MATLABName', ${3:value}, 'Description', ${4:value})'''
        description: '''FunctionDefinition = clibgen.LibraryDefinition.addFunction(LibraryDefinition, CPPSignature, 'MATLABName', value, 'Description', value)'''


    "clibgen.LibraryDefinition":
        prefix: "clibgen.LibraryDefinition"
        body: '''${1:LibraryDefinition} = clibgen.LibraryDefinition(${1:DataFile})'''
        description: '''LibraryDefinition = clibgen.LibraryDefinition(DataFile)'''


    "clibgen.LibraryDefinition.addConstructor":
        prefix: "clibgen.LibraryDefinition.addConstructor"
        body: '''${1:ConstructorDefinition} = clibgen.LibraryDefinition.addConstructor(${1:ClassDefinition}, ${2:CPPName}, 'Description', ${3:value})'''
        description: '''ConstructorDefinition = clibgen.LibraryDefinition.addConstructor(ClassDefinition, CPPName, 'Description', value)'''


    "clibgen.MethodDefinition.defineArgument":
        prefix: "clibgen.MethodDefinition.defineArgument"
        body: '''clibgen.MethodDefinition.defineArgument(${1:MethodDefinition}, ${2:CPPName}, ${3:MATLABType}, ${4:Direction}, ${5:Shape})'''
        description: '''clibgen.MethodDefinition.defineArgument(MethodDefinition, CPPName, MATLABType, Direction, Shape)'''


    "clibgen.MethodDefinition.validate":
        prefix: "clibgen.MethodDefinition.validate"
        body: '''clibgen.MethodDefinition.validate(${1:MethodDefinition})'''
        description: '''clibgen.MethodDefinition.validate(MethodDefinition)'''


    "clibgen.FunctionDefinition.defineOutput":
        prefix: "clibgen.FunctionDefinition.defineOutput"
        body: '''clibgen.FunctionDefinition.defineOutput(${1:FunctionDefinition}, ${2:MATLABName}, ${3:MATLABType}, ${4:Shape})'''
        description: '''clibgen.FunctionDefinition.defineOutput(FunctionDefinition, MATLABName, MATLABType, Shape)'''


    "clibgen.LibraryDefinition.addEnumeration":
        prefix: "clibgen.LibraryDefinition.addEnumeration"
        body: '''${1:EnumDefinition} = clibgen.LibraryDefinition.addEnumeration(${1:LibraryDefinition}, ${2:CPPName}, ${3:MATLABType}, ${4:Enumerants}, 'MATLABName', ${5:value}, 'Description', ${6:value})'''
        description: '''EnumDefinition = clibgen.LibraryDefinition.addEnumeration(LibraryDefinition, CPPName, MATLABType, Enumerants, 'MATLABName', value, 'Description', value)'''


    "clibgen.FunctionDefinition.defineArgument":
        prefix: "clibgen.FunctionDefinition.defineArgument"
        body: '''clibgen.FunctionDefinition.defineArgument(${1:FunctionDefinition}, ${2:CPPName}, ${3:MATLABType}, ${4:Direction}, ${5:Shape})'''
        description: '''clibgen.FunctionDefinition.defineArgument(FunctionDefinition, CPPName, MATLABType, Direction, Shape)'''


    "clibgen.LibraryDefinition.validate":
        prefix: "clibgen.LibraryDefinition.validate"
        body: '''clibgen.LibraryDefinition.validate(${1:LibraryDefinition})'''
        description: '''clibgen.LibraryDefinition.validate(LibraryDefinition)'''


    "clibgen.FunctionDefinition.validate":
        prefix: "clibgen.FunctionDefinition.validate"
        body: '''clibgen.FunctionDefinition.validate(${1:FunctionDefinition})'''
        description: '''clibgen.FunctionDefinition.validate(FunctionDefinition)'''


    "clibgen.MethodDefinition.defineOutput":
        prefix: "clibgen.MethodDefinition.defineOutput"
        body: '''clibgen.MethodDefinition.defineOutput(${1:MethodDefinition}, ${2:MATLABName}, ${3:MATLABType}, ${4:Shape})'''
        description: '''clibgen.MethodDefinition.defineOutput(MethodDefinition, MATLABName, MATLABType, Shape)'''


    "clibgen.LibraryDefinition.addClass":
        prefix: "clibgen.LibraryDefinition.addClass"
        body: '''${1:ClassDefinition} = clibgen.LibraryDefinition.addClass(${1:LibraryDefinition}, ${2:CPPName}, 'MATLABName', ${3:value}, 'Description', ${4:value})'''
        description: '''ClassDefinition = clibgen.LibraryDefinition.addClass(LibraryDefinition, CPPName, 'MATLABName', value, 'Description', value)'''

