# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
'.source.matlab, source.m':

    "comm.HelicalDeinterleaver":
        prefix: "comm.HelicalDeinterleaver"
        body: '''comm.HelicalDeinterleaver(${1:varargin})'''
        description: '''comm.HelicalDeinterleaver(varargin)'''


    "comm.BinarySymmetricChannel":
        prefix: "comm.BinarySymmetricChannel"
        body: '''comm.BinarySymmetricChannel(${1:varargin})'''
        description: '''comm.BinarySymmetricChannel(varargin)'''


    "algintrlv":
        prefix: "algintrlv"
        body: '''algintrlv(${1:data}, ${2:num}, ${3:type}, ${4:arg})'''
        description: '''algintrlv(data, num, type, arg)'''


    "comm.FMBroadcastDemodulator":
        prefix: "comm.FMBroadcastDemodulator"
        body: '''comm.FMBroadcastDemodulator(${1:varargin})'''
        description: '''comm.FMBroadcastDemodulator(varargin)'''


    "comm.HDLRSEncoder":
        prefix: "comm.HDLRSEncoder"
        body: '''comm.HDLRSEncoder(${1:CodewordLength}, ${2:MessageLength}, ${3:varargin})'''
        description: '''comm.HDLRSEncoder(CodewordLength, MessageLength, varargin)'''


    "comm.RSEncoder":
        prefix: "comm.RSEncoder"
        body: '''comm.RSEncoder(${1:CodewordLength}, ${2:MessageLength}, ${3:GeneratorPolynomial}, ${4:ShortMessageLength}, ${5:varargin})'''
        description: '''comm.RSEncoder(CodewordLength, MessageLength, GeneratorPolynomial, ShortMessageLength, varargin)'''


    "comm.ConstellationDiagram":
        prefix: "comm.ConstellationDiagram"
        body: '''comm.ConstellationDiagram(${1:NumInputPorts}, ${2:varargin})'''
        description: '''comm.ConstellationDiagram(NumInputPorts, varargin)'''


    "comm.BarkerCode":
        prefix: "comm.BarkerCode"
        body: '''comm.BarkerCode(${1:varargin})'''
        description: '''comm.BarkerCode(varargin)'''


    "comm.HDLCRCDetector":
        prefix: "comm.HDLCRCDetector"
        body: '''comm.HDLCRCDetector(${1:Polynomial}, ${2:varargin})'''
        description: '''comm.HDLCRCDetector(Polynomial, varargin)'''


    "comm.OFDMDemodulator":
        prefix: "comm.OFDMDemodulator"
        body: '''comm.OFDMDemodulator(${1:varargin})'''
        description: '''comm.OFDMDemodulator(varargin)'''


    "gsmUplinkConfig":
        prefix: "gsmUplinkConfig"
        body: '''gsmUplinkConfig(${1:SamplesPerSymbol}, ${2:arg})'''
        description: '''gsmUplinkConfig(SamplesPerSymbol, arg)'''


    "comm.IQImbalanceCompensator":
        prefix: "comm.IQImbalanceCompensator"
        body: '''comm.IQImbalanceCompensator(${1:varargin})'''
        description: '''comm.IQImbalanceCompensator(varargin)'''


    "comm.MER":
        prefix: "comm.MER"
        body: '''comm.MER(${1:varargin})'''
        description: '''comm.MER(varargin)'''


    "comm.DifferentialEncoder":
        prefix: "comm.DifferentialEncoder"
        body: '''comm.DifferentialEncoder(${1:InitialCondition}, ${2:varargin})'''
        description: '''comm.DifferentialEncoder(InitialCondition, varargin)'''


    "comm.MIMOChannel":
        prefix: "comm.MIMOChannel"
        body: '''comm.MIMOChannel(${1:varargin})'''
        description: '''comm.MIMOChannel(varargin)'''


    "comm.gpu.PSKDemodulator":
        prefix: "comm.gpu.PSKDemodulator"
        body: '''comm.gpu.PSKDemodulator(${1:ModulationOrder}, ${2:PhaseOffset}, ${3:varargin})'''
        description: '''comm.gpu.PSKDemodulator(ModulationOrder, PhaseOffset, varargin)'''


    "comm.HDLRSDecoder":
        prefix: "comm.HDLRSDecoder"
        body: '''comm.HDLRSDecoder(${1:CodewordLength}, ${2:MessageLength}, ${3:varargin})'''
        description: '''comm.HDLRSDecoder(CodewordLength, MessageLength, varargin)'''


    "comm.DPD":
        prefix: "comm.DPD"
        body: '''comm.DPD(${1:varargin})'''
        description: '''comm.DPD(varargin)'''


    "comm.BasebandFileReader":
        prefix: "comm.BasebandFileReader"
        body: '''comm.BasebandFileReader(${1:Filename}, ${2:SamplesPerFrame}, ${3:varargin})'''
        description: '''comm.BasebandFileReader(Filename, SamplesPerFrame, varargin)'''


    "comm.gpu.BlockDeinterleaver":
        prefix: "comm.gpu.BlockDeinterleaver"
        body: '''comm.gpu.BlockDeinterleaver(${1:PermutationVector}, ${2:varargin})'''
        description: '''comm.gpu.BlockDeinterleaver(PermutationVector, varargin)'''


    "comm.DifferentialDecoder":
        prefix: "comm.DifferentialDecoder"
        body: '''comm.DifferentialDecoder(${1:InitialCondition}, ${2:varargin})'''
        description: '''comm.DifferentialDecoder(InitialCondition, varargin)'''


    "comm.CPMModulator":
        prefix: "comm.CPMModulator"
        body: '''comm.CPMModulator(${1:ModulationOrder}, ${2:varargin})'''
        description: '''comm.CPMModulator(ModulationOrder, varargin)'''


    "comm.gpu.LDPCDecoder":
        prefix: "comm.gpu.LDPCDecoder"
        body: '''comm.gpu.LDPCDecoder(${1:ParityCheckMatrix}, ${2:varargin})'''
        description: '''comm.gpu.LDPCDecoder(ParityCheckMatrix, varargin)'''


    "comm.RayleighChannel":
        prefix: "comm.RayleighChannel"
        body: '''comm.RayleighChannel(${1:varargin})'''
        description: '''comm.RayleighChannel(varargin)'''


    "comm.gpu.TurboDecoder":
        prefix: "comm.gpu.TurboDecoder"
        body: '''comm.gpu.TurboDecoder(${1:TrellisStructure}, ${2:InterleaverIndices}, ${3:NumIterations}, ${4:varargin})'''
        description: '''comm.gpu.TurboDecoder(TrellisStructure, InterleaverIndices, NumIterations, varargin)'''


    "comm.CarrierSynchronizer":
        prefix: "comm.CarrierSynchronizer"
        body: '''comm.CarrierSynchronizer(${1:varargin})'''
        description: '''comm.CarrierSynchronizer(varargin)'''


    "comm.PreambleDetector":
        prefix: "comm.PreambleDetector"
        body: '''comm.PreambleDetector(${1:Preamble}, ${2:varargin})'''
        description: '''comm.PreambleDetector(Preamble, varargin)'''


    "comm.WalshCode":
        prefix: "comm.WalshCode"
        body: '''comm.WalshCode(${1:varargin})'''
        description: '''comm.WalshCode(varargin)'''


    "comm.RBDSWaveformGenerator":
        prefix: "comm.RBDSWaveformGenerator"
        body: '''comm.RBDSWaveformGenerator(${1:varargin})'''
        description: '''comm.RBDSWaveformGenerator(varargin)'''


    "comm.CCDF":
        prefix: "comm.CCDF"
        body: '''comm.CCDF(${1:varargin})'''
        description: '''comm.CCDF(varargin)'''


    "comm.GeneralQAMTCMModulator":
        prefix: "comm.GeneralQAMTCMModulator"
        body: '''comm.GeneralQAMTCMModulator(${1:TrellisStructure}, ${2:varargin})'''
        description: '''comm.GeneralQAMTCMModulator(TrellisStructure, varargin)'''


    "comm.gpu.BlockInterleaver":
        prefix: "comm.gpu.BlockInterleaver"
        body: '''comm.gpu.BlockInterleaver(${1:PermutationVector}, ${2:varargin})'''
        description: '''comm.gpu.BlockInterleaver(PermutationVector, varargin)'''


    "comm.OVSFCode":
        prefix: "comm.OVSFCode"
        body: '''comm.OVSFCode(${1:varargin})'''
        description: '''comm.OVSFCode(varargin)'''


    "comm.FMBroadcastModulator":
        prefix: "comm.FMBroadcastModulator"
        body: '''comm.FMBroadcastModulator(${1:varargin})'''
        description: '''comm.FMBroadcastModulator(varargin)'''


    "comm.gpu.PSKModulator":
        prefix: "comm.gpu.PSKModulator"
        body: '''comm.gpu.PSKModulator(${1:ModulationOrder}, ${2:PhaseOffset}, ${3:varargin})'''
        description: '''comm.gpu.PSKModulator(ModulationOrder, PhaseOffset, varargin)'''


    "comm.LDPCDecoder":
        prefix: "comm.LDPCDecoder"
        body: '''comm.LDPCDecoder(${1:ParityCheckMatrix}, ${2:varargin})'''
        description: '''comm.LDPCDecoder(ParityCheckMatrix, varargin)'''


    "comm.CPMDemodulator":
        prefix: "comm.CPMDemodulator"
        body: '''comm.CPMDemodulator(${1:ModulationOrder}, ${2:varargin})'''
        description: '''comm.CPMDemodulator(ModulationOrder, varargin)'''


    "comm.AGC":
        prefix: "comm.AGC"
        body: '''comm.AGC(${1:varargin})'''
        description: '''comm.AGC(varargin)'''


    "comm.PSKCoarseFrequencyEstimator":
        prefix: "comm.PSKCoarseFrequencyEstimator"
        body: '''comm.PSKCoarseFrequencyEstimator(${1:varargin})'''
        description: '''comm.PSKCoarseFrequencyEstimator(varargin)'''


    "comm.QAMCoarseFrequencyEstimator":
        prefix: "comm.QAMCoarseFrequencyEstimator"
        body: '''comm.QAMCoarseFrequencyEstimator(${1:varargin})'''
        description: '''comm.QAMCoarseFrequencyEstimator(varargin)'''


    "algdeintrlv":
        prefix: "algdeintrlv"
        body: '''algdeintrlv(${1:data}, ${2:num}, ${3:type}, ${4:arg})'''
        description: '''algdeintrlv(data, num, type, arg)'''


    "comm.SymbolSynchronizer":
        prefix: "comm.SymbolSynchronizer"
        body: '''comm.SymbolSynchronizer(${1:varargin})'''
        description: '''comm.SymbolSynchronizer(varargin)'''


    "comm.TurboEncoder":
        prefix: "comm.TurboEncoder"
        body: '''comm.TurboEncoder(${1:TrellisStructure}, ${2:InterleaverIndices}, ${3:varargin})'''
        description: '''comm.TurboEncoder(TrellisStructure, InterleaverIndices, varargin)'''


    "comm.RaisedCosineReceiveFilter":
        prefix: "comm.RaisedCosineReceiveFilter"
        body: '''comm.RaisedCosineReceiveFilter(${1:varargin})'''
        description: '''comm.RaisedCosineReceiveFilter(varargin)'''


    "comm.LinearEqualizer":
        prefix: "comm.LinearEqualizer"
        body: '''comm.LinearEqualizer(${1:varargin})'''
        description: '''comm.LinearEqualizer(varargin)'''


    "comm.SphereDecoder":
        prefix: "comm.SphereDecoder"
        body: '''comm.SphereDecoder(${1:Constellation}, ${2:BitTable}, ${3:varargin})'''
        description: '''comm.SphereDecoder(Constellation, BitTable, varargin)'''


    "comm.FMModulator":
        prefix: "comm.FMModulator"
        body: '''comm.FMModulator(${1:varargin})'''
        description: '''comm.FMModulator(varargin)'''


    "comm.FMDemodulator":
        prefix: "comm.FMDemodulator"
        body: '''comm.FMDemodulator(${1:varargin})'''
        description: '''comm.FMDemodulator(varargin)'''


    "comm.gpu.ConvolutionalInterleaver":
        prefix: "comm.gpu.ConvolutionalInterleaver"
        body: '''comm.gpu.ConvolutionalInterleaver(${1:NumRegisters}, ${2:RegisterLengthStep}, ${3:InitialConditions}, ${4:varargin})'''
        description: '''comm.gpu.ConvolutionalInterleaver(NumRegisters, RegisterLengthStep, InitialConditions, varargin)'''


    "comm.PSKTCMModulator":
        prefix: "comm.PSKTCMModulator"
        body: '''comm.PSKTCMModulator(${1:TrellisStructure}, ${2:varargin})'''
        description: '''comm.PSKTCMModulator(TrellisStructure, varargin)'''


    "comm.RicianChannel":
        prefix: "comm.RicianChannel"
        body: '''comm.RicianChannel(${1:varargin})'''
        description: '''comm.RicianChannel(varargin)'''


    "comm.RSDecoder":
        prefix: "comm.RSDecoder"
        body: '''comm.RSDecoder(${1:CodewordLength}, ${2:MessageLength}, ${3:GeneratorPolynomial}, ${4:ShortMessageLength}, ${5:varargin})'''
        description: '''comm.RSDecoder(CodewordLength, MessageLength, GeneratorPolynomial, ShortMessageLength, varargin)'''


    "comm.ThermalNoise":
        prefix: "comm.ThermalNoise"
        body: '''comm.ThermalNoise(${1:varargin})'''
        description: '''comm.ThermalNoise(varargin)'''


    "comm.ACPR":
        prefix: "comm.ACPR"
        body: '''comm.ACPR(${1:varargin})'''
        description: '''comm.ACPR(varargin)'''


    "comm.AWGNChannel":
        prefix: "comm.AWGNChannel"
        body: '''comm.AWGNChannel(${1:varargin})'''
        description: '''comm.AWGNChannel(varargin)'''


    "comm.HDLCRCGenerator":
        prefix: "comm.HDLCRCGenerator"
        body: '''comm.HDLCRCGenerator(${1:Polynomial}, ${2:varargin})'''
        description: '''comm.HDLCRCGenerator(Polynomial, varargin)'''


    "comm.GoldSequence":
        prefix: "comm.GoldSequence"
        body: '''comm.GoldSequence(${1:varargin})'''
        description: '''comm.GoldSequence(varargin)'''


    "comm.HelicalInterleaver":
        prefix: "comm.HelicalInterleaver"
        body: '''comm.HelicalInterleaver(${1:varargin})'''
        description: '''comm.HelicalInterleaver(varargin)'''


    "comm.gpu.ViterbiDecoder":
        prefix: "comm.gpu.ViterbiDecoder"
        body: '''comm.gpu.ViterbiDecoder(${1:TrellisStructure}, ${2:varargin})'''
        description: '''comm.gpu.ViterbiDecoder(TrellisStructure, varargin)'''


    "comm.gpu.ConvolutionalDeinterleaver":
        prefix: "comm.gpu.ConvolutionalDeinterleaver"
        body: '''comm.gpu.ConvolutionalDeinterleaver(${1:NumRegisters}, ${2:RegisterLengthStep}, ${3:InitialConditions}, ${4:varargin})'''
        description: '''comm.gpu.ConvolutionalDeinterleaver(NumRegisters, RegisterLengthStep, InitialConditions, varargin)'''


    "comm.TurboDecoder":
        prefix: "comm.TurboDecoder"
        body: '''comm.TurboDecoder(${1:TrellisStructure}, ${2:InterleaverIndices}, ${3:NumIterations}, ${4:varargin})'''
        description: '''comm.TurboDecoder(TrellisStructure, InterleaverIndices, NumIterations, varargin)'''


    "comm.RaisedCosineTransmitFilter":
        prefix: "comm.RaisedCosineTransmitFilter"
        body: '''comm.RaisedCosineTransmitFilter(${1:varargin})'''
        description: '''comm.RaisedCosineTransmitFilter(varargin)'''


    "comm.DecisionFeedbackEqualizer":
        prefix: "comm.DecisionFeedbackEqualizer"
        body: '''comm.DecisionFeedbackEqualizer(${1:varargin})'''
        description: '''comm.DecisionFeedbackEqualizer(varargin)'''


    "comm.LTEMIMOChannel":
        prefix: "comm.LTEMIMOChannel"
        body: '''comm.LTEMIMOChannel(${1:varargin})'''
        description: '''comm.LTEMIMOChannel(varargin)'''


    "comm.OFDMModulator":
        prefix: "comm.OFDMModulator"
        body: '''comm.OFDMModulator(${1:varargin})'''
        description: '''comm.OFDMModulator(varargin)'''


    "comm.HadamardCode":
        prefix: "comm.HadamardCode"
        body: '''comm.HadamardCode(${1:varargin})'''
        description: '''comm.HadamardCode(varargin)'''


    "gsmDownlinkConfig":
        prefix: "gsmDownlinkConfig"
        body: '''gsmDownlinkConfig(${1:SamplesPerSymbol}, ${2:arg})'''
        description: '''gsmDownlinkConfig(SamplesPerSymbol, arg)'''


    "comm.DPDCoefficientEstimator":
        prefix: "comm.DPDCoefficientEstimator"
        body: '''comm.DPDCoefficientEstimator(${1:varargin})'''
        description: '''comm.DPDCoefficientEstimator(varargin)'''


    "comm.BasebandFileWriter":
        prefix: "comm.BasebandFileWriter"
        body: '''comm.BasebandFileWriter(${1:Filename}, ${2:SampleRate}, ${3:CenterFrequency}, ${4:Metadata}, ${5:varargin})'''
        description: '''comm.BasebandFileWriter(Filename, SampleRate, CenterFrequency, Metadata, varargin)'''


    "comm.DiscreteTimeVCO":
        prefix: "comm.DiscreteTimeVCO"
        body: '''comm.DiscreteTimeVCO(${1:varargin})'''
        description: '''comm.DiscreteTimeVCO(varargin)'''


    "comm.MemorylessNonlinearity":
        prefix: "comm.MemorylessNonlinearity"
        body: '''comm.MemorylessNonlinearity(${1:varargin})'''
        description: '''comm.MemorylessNonlinearity(varargin)'''


    "comm.gpu.AWGNChannel":
        prefix: "comm.gpu.AWGNChannel"
        body: '''comm.gpu.AWGNChannel(${1:varargin})'''
        description: '''comm.gpu.AWGNChannel(varargin)'''


    "comm.OQPSKDemodulator":
        prefix: "comm.OQPSKDemodulator"
        body: '''comm.OQPSKDemodulator(${1:varargin})'''
        description: '''comm.OQPSKDemodulator(varargin)'''


    "comm.CoarseFrequencyCompensator":
        prefix: "comm.CoarseFrequencyCompensator"
        body: '''comm.CoarseFrequencyCompensator(${1:varargin})'''
        description: '''comm.CoarseFrequencyCompensator(varargin)'''


    "comm.OQPSKModulator":
        prefix: "comm.OQPSKModulator"
        body: '''comm.OQPSKModulator(${1:varargin})'''
        description: '''comm.OQPSKModulator(varargin)'''


    "comm.RectangularQAMTCMModulator":
        prefix: "comm.RectangularQAMTCMModulator"
        body: '''comm.RectangularQAMTCMModulator(${1:TrellisStructure}, ${2:varargin})'''
        description: '''comm.RectangularQAMTCMModulator(TrellisStructure, varargin)'''


    "comm.gpu.ConvolutionalEncoder":
        prefix: "comm.gpu.ConvolutionalEncoder"
        body: '''comm.gpu.ConvolutionalEncoder(${1:TrellisStructure}, ${2:varargin})'''
        description: '''comm.gpu.ConvolutionalEncoder(TrellisStructure, varargin)'''


    "comm.EVM":
        prefix: "comm.EVM"
        body: '''comm.EVM(${1:varargin})'''
        description: '''comm.EVM(varargin)'''

