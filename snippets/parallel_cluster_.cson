# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
'.source.matlab, source.m':

    "parforOptions":
        prefix: "parforOptions"
        body: '''${1:opts} = parforOptions(${1:exec}, 'RangePartitionMethod', ${2:value}, 'SubrangeSize', ${3:value}, 'AutoAddClientPath', ${4:value}, 'AdditionalPaths', ${5:value}, 'AutoAttachFiles', ${6:value}, 'AttachedFiles', ${7:value}, 'MaxNumWorkers', ${8:value})'''
        description: '''${1:opts} = parforOptions(${1:exec}, 'RangePartitionMethod', ${2:value}, 'SubrangeSize', ${3:value}, 'AutoAddClientPath', ${4:value}, 'AdditionalPaths', ${5:value}, 'AutoAttachFiles', ${6:value}, 'AttachedFiles', ${7:value}, 'MaxNumWorkers', ${8:value})'''


    "parallel.Job.recreate":
        prefix: "parallel.Job.recreate"
        body: '''${1:newjob} = parallel.Job.recreate(${1:oldjob}, 'TaskID', ${2:value}, 'TaskState', ${3:value})'''
        description: '''${1:newjob} = parallel.Job.recreate(${1:oldjob}, 'TaskID', ${2:value}, 'TaskState', ${3:value})'''


    "parallel.Cluster.findJob":
        prefix: "parallel.Cluster.findJob"
        body: '''${1:jobs} = parallel.Cluster.findJob(${1:c}, 'AdditionalPaths', ${2:value}, 'AttachedFiles', ${3:value}, 'AuthorizedUsers', ${4:value}, 'AutoAddClientPath', ${5:value}, 'AutoAttachFiles', ${6:value}, 'CreateDateTime', ${7:value}, 'EnvironmentVariables', ${8:value}, 'FinishDateTime', ${9:value}, 'FinishedFcn', ${10:value}, 'ID', ${11:value}, 'JobData', ${12:value}, 'Name', ${13:value}, 'NumThreads', ${14:value}, 'NumWorkersRange', ${15:value}, 'Parent', ${16:value}, 'QueuedFcn', ${17:value}, 'RestartWorker', ${18:value}, 'RunningFcn', ${19:value}, 'StartDateTime', ${20:value}, 'State', ${21:value}, 'SubmitDateTime', ${22:value}, 'Tag', ${23:value}, 'Tasks', ${24:value}, 'Timeout', ${25:value}, 'Type', ${26:value}, 'UserData', ${27:value}, 'Username', ${28:value})'''
        description: '''${1:jobs} = parallel.Cluster.findJob(${1:c}, 'AdditionalPaths', ${2:value}, 'AttachedFiles', ${3:value}, 'AuthorizedUsers', ${4:value}, 'AutoAddClientPath', ${5:value}, 'AutoAttachFiles', ${6:value}, 'CreateDateTime', ${7:value}, 'EnvironmentVariables', ${8:value}, 'FinishDateTime', ${9:value}, 'FinishedFcn', ${10:value}, 'ID', ${11:value}, 'JobData', ${12:value}, 'Name', ${13:value}, 'NumThreads', ${14:value}, 'NumWorkersRange', ${15:value}, 'Parent', ${16:value}, 'QueuedFcn', ${17:value}, 'RestartWorker', ${18:value}, 'RunningFcn', ${19:value}, 'StartDateTime', ${20:value}, 'State', ${21:value}, 'SubmitDateTime', ${22:value}, 'Tag', ${23:value}, 'Tasks', ${24:value}, 'Timeout', ${25:value}, 'Type', ${26:value}, 'UserData', ${27:value}, 'Username', ${28:value})'''


    "parcluster":
        prefix: "parcluster"
        body: '''${1:c} = parcluster(${1:optional_profile})'''
        description: '''${1:c} = parcluster(${1:optional_profile})'''


    "parallel.importProfile":
        prefix: "parallel.importProfile"
        body: '''${1:prof} = parallel.importProfile(${1:filename})'''
        description: '''${1:prof} = parallel.importProfile(${1:filename})'''


    "parallel.Job.createTask":
        prefix: "parallel.Job.createTask"
        body: '''${1:t} = parallel.Job.createTask(${1:j}, ${2:F}, ${3:N}, ${4:{inputargs}}, 'CaptureDiary', ${5:value}, 'FinishedFcn', ${6:value}, 'MaximumRetries', ${7:value}, 'Name', ${8:value}, 'Profile', ${9:value}, 'RunningFcn', ${10:value}, 'Timeout', ${11:value}, 'UserData', ${12:value})'''
        description: '''${1:t} = parallel.Job.createTask(${1:j}, ${2:F}, ${3:N}, ${4:{inputargs}}, 'CaptureDiary', ${5:value}, 'FinishedFcn', ${6:value}, 'MaximumRetries', ${7:value}, 'Name', ${8:value}, 'Profile', ${9:value}, 'RunningFcn', ${10:value}, 'Timeout', ${11:value}, 'UserData', ${12:value})'''


    "parpool":
        prefix: "parpool"
        body: '''${1:poolobj} = parpool(${1:optional_profilename}, ${2:optional_poolsize}, 'AttachedFiles', ${3:value}, 'AutoAddClientPath', ${4:value}, 'EnvironmentVariables', ${5:value}, 'IdleTimeout', ${6:value}, 'SpmdEnabled', ${7:value})'''
        description: '''${1:poolobj} = parpool(${1:optional_profilename}, ${2:optional_poolsize}, 'AttachedFiles', ${3:value}, 'AutoAddClientPath', ${4:value}, 'EnvironmentVariables', ${5:value}, 'IdleTimeout', ${6:value}, 'SpmdEnabled', ${7:value})'''


    "parallel.Future.fetchOutputs":
        prefix: "parallel.Future.fetchOutputs"
        body: '''${1:B} = parallel.Future.fetchOutputs(${1:F}, 'UniformOutput', ${2:value})'''
        description: '''${1:B} = parallel.Future.fetchOutputs(${1:F}, 'UniformOutput', ${2:value})'''


    "parallel.Cluster.saveProfile":
        prefix: "parallel.Cluster.saveProfile"
        body: '''parallel.Cluster.saveProfile(${1:cluster}, 'Description', ${2:value})'''
        description: '''parallel.Cluster.saveProfile(${1:cluster}, 'Description', ${2:value})'''


    "parallel.Job.load":
        prefix: "parallel.Job.load"
        body: '''${1:S} = parallel.Job.load(${1:job}, ${2:optional_X})'''
        description: '''${1:S} = parallel.Job.load(${1:job}, ${2:optional_X})'''


    "parallel.Future.wait":
        prefix: "parallel.Future.wait"
        body: '''${1:ok} = parallel.Future.wait(${1:F}, ${2:state}, ${3:optional_timeout})'''
        description: '''${1:ok} = parallel.Future.wait(${1:F}, ${2:state}, ${3:optional_timeout})'''


    "parallel.Cluster.parpool":
        prefix: "parallel.Cluster.parpool"
        body: '''${1:poolobj} = parallel.Cluster.parpool(${1:cluster}, ${2:optional_poolsize}, 'AttachedFiles', ${3:value}, 'AutoAddClientPath', ${4:value}, 'EnvironmentVariables', ${5:value}, 'IdleTimeout', ${6:value}, 'SpmdEnabled', ${7:value})'''
        description: '''${1:poolobj} = parallel.Cluster.parpool(${1:cluster}, ${2:optional_poolsize}, 'AttachedFiles', ${3:value}, 'AutoAddClientPath', ${4:value}, 'EnvironmentVariables', ${5:value}, 'IdleTimeout', ${6:value}, 'SpmdEnabled', ${7:value})'''


    "parallel.Future.cancel":
        prefix: "parallel.Future.cancel"
        body: '''parallel.Future.cancel(${1:F})'''
        description: '''parallel.Future.cancel(${1:F})'''


    "parallel.Task.wait":
        prefix: "parallel.Task.wait"
        body: '''${1:ok} = parallel.Task.wait(${1:t}, ${2:state}, ${3:optional_timeout})'''
        description: '''${1:ok} = parallel.Task.wait(${1:t}, ${2:state}, ${3:optional_timeout})'''


    "parallel.Cluster.createJob":
        prefix: "parallel.Cluster.createJob"
        body: '''${1:job} = parallel.Cluster.createJob(${1:cluster}, 'AdditionalPaths', ${2:value}, 'AttachedFiles', ${3:value}, 'AuthorizedUsers', ${4:value}, 'AutoAddClientPath', ${5:value}, 'AutoAttachFiles', ${6:value}, 'EnvironmentVariables', ${7:value}, 'FinishedFcn', ${8:value}, 'JobData', ${9:value}, 'Name', ${10:value}, 'NumWorkersRange', ${11:value}, 'Profile', ${12:value}, 'QueuedFcn', ${13:value}, 'RestartWorker', ${14:value}, 'RunningFcn', ${15:value}, 'Tag', ${16:value}, 'Timeout', ${17:value}, 'UserData', ${18:value})'''
        description: '''${1:job} = parallel.Cluster.createJob(${1:cluster}, 'AdditionalPaths', ${2:value}, 'AttachedFiles', ${3:value}, 'AuthorizedUsers', ${4:value}, 'AutoAddClientPath', ${5:value}, 'AutoAttachFiles', ${6:value}, 'EnvironmentVariables', ${7:value}, 'FinishedFcn', ${8:value}, 'JobData', ${9:value}, 'Name', ${10:value}, 'NumWorkersRange', ${11:value}, 'Profile', ${12:value}, 'QueuedFcn', ${13:value}, 'RestartWorker', ${14:value}, 'RunningFcn', ${15:value}, 'Tag', ${16:value}, 'Timeout', ${17:value}, 'UserData', ${18:value})'''


    "parallel.Job.findTask":
        prefix: "parallel.Job.findTask"
        body: '''${1:tasks} = parallel.Job.findTask(${1:j}, 'CaptureDiary', ${2:value}, 'CreateDateTime', ${3:value}, 'Diary', ${4:value}, 'Error', ${5:value}, 'ErrorIdentifier', ${6:value}, 'ErrorMessage', ${7:value}, 'FailureInfo', ${8:value}, 'FinishDateTime', ${9:value}, 'FinishedFcn', ${10:value}, 'Function', ${11:value}, 'ID', ${12:value}, 'InputArguments', ${13:value}, 'MaximumRetries', ${14:value}, 'Name', ${15:value}, 'NumFailures', ${16:value}, 'NumOutputArguments', ${17:value}, 'OutputArguments', ${18:value}, 'Parent', ${19:value}, 'RunningFcn', ${20:value}, 'StartDateTime', ${21:value}, 'State', ${22:value}, 'Timeout', ${23:value}, 'UserData', ${24:value}, 'Warnings', ${25:value}, 'Worker', ${26:value})'''
        description: '''${1:tasks} = parallel.Job.findTask(${1:j}, 'CaptureDiary', ${2:value}, 'CreateDateTime', ${3:value}, 'Diary', ${4:value}, 'Error', ${5:value}, 'ErrorIdentifier', ${6:value}, 'ErrorMessage', ${7:value}, 'FailureInfo', ${8:value}, 'FinishDateTime', ${9:value}, 'FinishedFcn', ${10:value}, 'Function', ${11:value}, 'ID', ${12:value}, 'InputArguments', ${13:value}, 'MaximumRetries', ${14:value}, 'Name', ${15:value}, 'NumFailures', ${16:value}, 'NumOutputArguments', ${17:value}, 'OutputArguments', ${18:value}, 'Parent', ${19:value}, 'RunningFcn', ${20:value}, 'StartDateTime', ${21:value}, 'State', ${22:value}, 'Timeout', ${23:value}, 'UserData', ${24:value}, 'Warnings', ${25:value}, 'Worker', ${26:value})'''


    "parallel.Future.afterEach":
        prefix: "parallel.Future.afterEach"
        body: '''${1:f2} = parallel.Future.afterEach(${1:F}, ${2:fcn}, ${3:nout}, 'PassFuture', ${4:value})'''
        description: '''${1:f2} = parallel.Future.afterEach(${1:F}, ${2:fcn}, ${3:nout}, 'PassFuture', ${4:value})'''


    "parallel.Job.diary":
        prefix: "parallel.Job.diary"
        body: '''parallel.Job.diary(${1:job}, ${2:optional_filename})'''
        description: '''parallel.Job.diary(${1:job}, ${2:optional_filename})'''


    "parallel.Cluster.createCommunicatingJob":
        prefix: "parallel.Cluster.createCommunicatingJob"
        body: '''${1:job} = parallel.Cluster.createCommunicatingJob(${1:cluster}, 'AdditionalPaths', ${2:value}, 'AttachedFiles', ${3:value}, 'AutoAddClientPath', ${4:value}, 'AuthorizedUsers', ${5:value}, 'AutoAttachFiles', ${6:value}, 'EnvironmentVariables', ${7:value}, 'FinishedFcn', ${8:value}, 'JobData', ${9:value}, 'Name', ${10:value}, 'NumWorkersRange', ${11:value}, 'Profile', ${12:value}, 'QueuedFcn', ${13:value}, 'RestartWorker', ${14:value}, 'RunningFcn', ${15:value}, 'Tag', ${16:value}, 'Timeout', ${17:value}, 'Type', ${18:value}, 'UserData', ${19:value})'''
        description: '''${1:job} = parallel.Cluster.createCommunicatingJob(${1:cluster}, 'AdditionalPaths', ${2:value}, 'AttachedFiles', ${3:value}, 'AutoAddClientPath', ${4:value}, 'AuthorizedUsers', ${5:value}, 'AutoAttachFiles', ${6:value}, 'EnvironmentVariables', ${7:value}, 'FinishedFcn', ${8:value}, 'JobData', ${9:value}, 'Name', ${10:value}, 'NumWorkersRange', ${11:value}, 'Profile', ${12:value}, 'QueuedFcn', ${13:value}, 'RestartWorker', ${14:value}, 'RunningFcn', ${15:value}, 'Tag', ${16:value}, 'Timeout', ${17:value}, 'Type', ${18:value}, 'UserData', ${19:value})'''


    "parallel.exportProfile":
        prefix: "parallel.exportProfile"
        body: '''parallel.exportProfile(${1:profileName}, ${2:filename})'''
        description: '''parallel.exportProfile(${1:profileName}, ${2:filename})'''


    "parallel.Cluster.batch":
        prefix: "parallel.Cluster.batch"
        body: '''${1:j} = parallel.Cluster.batch(${1:myCluster}, ${2:aScript}, 'AdditionalPaths', ${3:value}, 'AttachedFiles', ${4:value}, 'AutoAddClientPath', ${5:value}, 'AutoAttachFiles', ${6:value}, 'CaptureDiary', ${7:value}, 'CurrentFolder', ${8:value}, 'EnvironmentVariables', ${9:value}, 'Pool', ${10:value}, 'Profile', ${11:value}, 'Workspace', ${12:value})'''
        description: '''${1:j} = parallel.Cluster.batch(${1:myCluster}, ${2:aScript}, 'AdditionalPaths', ${3:value}, 'AttachedFiles', ${4:value}, 'AutoAddClientPath', ${5:value}, 'AutoAttachFiles', ${6:value}, 'CaptureDiary', ${7:value}, 'CurrentFolder', ${8:value}, 'EnvironmentVariables', ${9:value}, 'Pool', ${10:value}, 'Profile', ${11:value}, 'Workspace', ${12:value})'''


    "parallel.FevalFuture.fetchNext":
        prefix: "parallel.FevalFuture.fetchNext"
        body: '''[${1:idx}, ${2:B}] = parallel.FevalFuture.fetchNext(${1:F}, ${2:optional_timeout})'''
        description: '''[${1:idx}, ${2:B}] = parallel.FevalFuture.fetchNext(${1:F}, ${2:optional_timeout})'''


    "parallel.Job.wait":
        prefix: "parallel.Job.wait"
        body: '''${1:ok} = parallel.Job.wait(${1:j}, ${2:state}, ${3:optional_timeout})'''
        description: '''${1:ok} = parallel.Job.wait(${1:j}, ${2:state}, ${3:optional_timeout})'''


    "parallel.cluster.AdditionalProperties.remove":
        prefix: "parallel.cluster.AdditionalProperties.remove"
        body: '''parallel.cluster.AdditionalProperties.remove(${1:s}, ${2:property})'''
        description: '''parallel.cluster.AdditionalProperties.remove(${1:s}, ${2:property})'''


    "parallel.Cluster.saveAsProfile":
        prefix: "parallel.Cluster.saveAsProfile"
        body: '''parallel.Cluster.saveAsProfile(${1:cluster}, ${2:profileName}, 'Description', ${3:value})'''
        description: '''parallel.Cluster.saveAsProfile(${1:cluster}, ${2:profileName}, 'Description', ${3:value})'''


    "parallel.defaultClusterProfile":
        prefix: "parallel.defaultClusterProfile"
        body: '''${1:oldprofile} = parallel.defaultClusterProfile(${1:optional_newprofile})'''
        description: '''${1:oldprofile} = parallel.defaultClusterProfile(${1:optional_newprofile})'''


    "parfevalOnAll":
        prefix: "parfevalOnAll"
        body: '''${1:F} = parfevalOnAll(${1:optional_P}, ${2:fcn}, ${3:numout}, ${4:optional_in})'''
        description: '''${1:F} = parfevalOnAll(${1:optional_P}, ${2:fcn}, ${3:numout}, ${4:optional_in})'''


    "parallel.Future.afterAll":
        prefix: "parallel.Future.afterAll"
        body: '''${1:f2} = parallel.Future.afterAll(${1:F}, ${2:fcn}, ${3:nout}, 'PassFuture', ${4:value})'''
        description: '''${1:f2} = parallel.Future.afterAll(${1:F}, ${2:fcn}, ${3:nout}, 'PassFuture', ${4:value})'''


    "parfeval":
        prefix: "parfeval"
        body: '''${1:F} = parfeval(${1:optional_P}, ${2:fcn}, ${3:numout}, ${4:optional_in})'''
        description: '''${1:F} = parfeval(${1:optional_P}, ${2:fcn}, ${3:numout}, ${4:optional_in})'''


    "gcp":
        prefix: "gcp"
        body: '''${1:p} = gcp(${1:optional_'nocreate'})'''
        description: '''${1:p} = gcp(${1:optional_'nocreate'})'''

