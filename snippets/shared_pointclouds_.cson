# MATLAB snippets generated using https://github.com/aminya/Matlab-Snippets
".source.matlab":

    "pointclouds.internal.pc.pointCloudImpl.findNeighborsInRadius":
    prefix: "pointclouds.internal.pc.pointCloudImpl.findNeighborsInRadius"
    body: '''pointclouds.internal.pc.pointCloudImpl.findNeighborsInRadius(${1:ptCloud}, ${2:point}, ${3:radius}, 'Sort', ${4:value}, 'MaxLeafChecks', ${5:value})'''
    description: '''pointclouds.internal.pc.pointCloudImpl.findNeighborsInRadius(${1:ptCloud}, ${2:point}, ${3:radius}, 'Sort', ${4:value}, 'MaxLeafChecks', ${5:value})'''


    "pointclouds.internal.pc.pointCloudImpl.findNearestNeighbors":
    prefix: "pointclouds.internal.pc.pointCloudImpl.findNearestNeighbors"
    body: '''pointclouds.internal.pc.pointCloudImpl.findNearestNeighbors(${1:ptCloud}, ${2:point}, ${3:K}, 'Sort', ${4:value}, 'MaxLeafChecks', ${5:value})'''
    description: '''pointclouds.internal.pc.pointCloudImpl.findNearestNeighbors(${1:ptCloud}, ${2:point}, ${3:K}, 'Sort', ${4:value}, 'MaxLeafChecks', ${5:value})'''


    "pointCloud":
    prefix: "pointCloud"
    body: '''pointCloud(${1:xyzPoints}, 'Color', ${2:value}, 'Normal', ${3:value}, 'Intensity', ${4:value})'''
    description: '''pointCloud(${1:xyzPoints}, 'Color', ${2:value}, 'Normal', ${3:value}, 'Intensity', ${4:value})'''


    "pcplayer.view":
    prefix: "pcplayer.view"
    body: '''pcplayer.view(${1:player}, ${2:ptCloud})'''
    description: '''pcplayer.view(${1:player}, ${2:ptCloud})'''


    "pcplayer":
    prefix: "pcplayer"
    body: '''pcplayer(${1:xlimits}, ${2:ylimits}, ${3:zlimits}, 'MarkerSize', ${4:value}, 'VerticalAxis', ${5:value}, 'VerticalAxisDir', ${6:value})'''
    description: '''pcplayer(${1:xlimits}, ${2:ylimits}, ${3:zlimits}, 'MarkerSize', ${4:value}, 'VerticalAxis', ${5:value}, 'VerticalAxisDir', ${6:value})'''


    "pointclouds.internal.pc.pointCloudImpl.removeInvalidPoints":
    prefix: "pointclouds.internal.pc.pointCloudImpl.removeInvalidPoints"
    body: '''pointclouds.internal.pc.pointCloudImpl.removeInvalidPoints(${1:ptCloud})'''
    description: '''pointclouds.internal.pc.pointCloudImpl.removeInvalidPoints(${1:ptCloud})'''


    "pointclouds.internal.pc.pointCloudImpl.select":
    prefix: "pointclouds.internal.pc.pointCloudImpl.select"
    body: '''pointclouds.internal.pc.pointCloudImpl.select(${1:ptCloud}, ${2:row}, ${3:column}, 'OutputSize', ${4:value})'''
    description: '''pointclouds.internal.pc.pointCloudImpl.select(${1:ptCloud}, ${2:row}, ${3:column}, 'OutputSize', ${4:value})'''


    "pointclouds.internal.pc.pointCloudImpl.findPointsInROI":
    prefix: "pointclouds.internal.pc.pointCloudImpl.findPointsInROI"
    body: '''pointclouds.internal.pc.pointCloudImpl.findPointsInROI(${1:ptCloud}, ${2:roi})'''
    description: '''pointclouds.internal.pc.pointCloudImpl.findPointsInROI(${1:ptCloud}, ${2:roi})'''

